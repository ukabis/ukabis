
// This file was automatically generated by the Dapper.SimpleCRUD T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Authority`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=tcp:jpdatahubdev.database.windows.net,1433;Initial Catalog=AuthoritySqlServer;Persist Security Info=False;User ID=agri;Password=******;`
//     Include Views:          `True`

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Collections.Generic;
using JP.DataHub.Com.Validations.Attributes;

namespace JP.DataHub.Infrastructure.Database.Authority
{
    public static class DatabaseConst
    {
        public const string DATABASE = "Authority";
        public const string TABLE_LOCALE = "Locale";
        public const string TABLE_SYSTEMMULTILANGUAGE = "SystemMultiLanguage";
        public const string TABLE_VENDORMULTILANGUAGE = "VendorMultiLanguage";
        public const string TABLE_DUMMY = "Dummy";
        public const string TABLE_CLIENTCERTIFICATE = "ClientCertificate";
        public const string TABLE_ACCESSTOKEN = "AccessToken";
        public const string TABLE_ADMINFUNC = "AdminFunc";
        public const string TABLE_ADMINFUNCROLE = "AdminFuncRole";
        public const string TABLE_CLIENT = "Client";
        public const string TABLE_FUNC = "Func";
        public const string TABLE_ROLE = "Role";
        public const string TABLE_STAFF = "Staff";
        public const string TABLE_STAFFROLE = "StaffRole";
        public const string TABLE_SYSTEM = "System";
        public const string TABLE_SYSTEMADMIN = "SystemAdmin";
        public const string TABLE_SYSTEMFUNC = "SystemFunc";
        public const string TABLE_USERINVITATION = "UserInvitation";
        public const string TABLE_VENDOR = "Vendor";
        public const string TABLE_CONST = "Const";

        public static readonly string COLUMN_LOCALE_LOCALE_CODE = "locale_code";
        public static readonly string COLUMN_LOCALE_REG_DATE = "reg_date";
        public static readonly string COLUMN_LOCALE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_LOCALE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_LOCALE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_LOCALE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_SYSTEM_LANG_ID = "system_lang_id";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_LOCALE_CODE = "locale_code";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_REG_DATE = "reg_date";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_SYSTEMMULTILANGUAGE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_VENDOR_LANG_ID = "vendor_lang_id";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_LOCALE_CODE = "locale_code";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_VENDORMULTILANGUAGE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DUMMY_P_KEY = "p_key";
        public static readonly string COLUMN_DUMMY_DATA = "data";
        public static readonly string COLUMN_DUMMY_NUM = "num";
        public static readonly string COLUMN_DUMMY_STR = "str";
        public static readonly string COLUMN_CLIENTCERTIFICATE_CLIENTCERTIFICATE_ID = "clientcertificate_id";
        public static readonly string COLUMN_CLIENTCERTIFICATE_CLIENT_CERTIFICATE_STRING = "client_certificate_string";
        public static readonly string COLUMN_CLIENTCERTIFICATE_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_CLIENTCERTIFICATE_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_CLIENTCERTIFICATE_REG_DATE = "reg_date";
        public static readonly string COLUMN_CLIENTCERTIFICATE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_CLIENTCERTIFICATE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_CLIENTCERTIFICATE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_CLIENTCERTIFICATE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_ACCESSTOKEN_ACCESSTOKEN_ID = "accesstoken_id";
        public static readonly string COLUMN_ACCESSTOKEN_CLIENT_ID = "client_id";
        public static readonly string COLUMN_ACCESSTOKEN_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_ACCESSTOKEN_EXPIRATION_DATETIME = "expiration_datetime";
        public static readonly string COLUMN_ACCESSTOKEN_REG_DATE = "reg_date";
        public static readonly string COLUMN_ACCESSTOKEN_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_ACCESSTOKEN_UPD_DATE = "upd_date";
        public static readonly string COLUMN_ACCESSTOKEN_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_ACCESSTOKEN_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_ADMINFUNC_ADMIN_FUNC_ID = "admin_func_id";
        public static readonly string COLUMN_ADMINFUNC_ADMIN_NAME = "admin_name";
        public static readonly string COLUMN_ADMINFUNC_REG_DATE = "reg_date";
        public static readonly string COLUMN_ADMINFUNC_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_ADMINFUNC_UPD_DATE = "upd_date";
        public static readonly string COLUMN_ADMINFUNC_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_ADMINFUNC_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_ADMINFUNC_DISPLAY_DESCRIPTION = "display_description";
        public static readonly string COLUMN_ADMINFUNCROLE_ADMIN_FUNC_ROLE_ID = "admin_func_role_id";
        public static readonly string COLUMN_ADMINFUNCROLE_ADMIN_FUNC_ID = "admin_func_id";
        public static readonly string COLUMN_ADMINFUNCROLE_ROLE_ID = "role_id";
        public static readonly string COLUMN_ADMINFUNCROLE_IS_READ = "is_read";
        public static readonly string COLUMN_ADMINFUNCROLE_IS_WRITE = "is_write";
        public static readonly string COLUMN_ADMINFUNCROLE_REG_DATE = "reg_date";
        public static readonly string COLUMN_ADMINFUNCROLE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_ADMINFUNCROLE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_ADMINFUNCROLE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_ADMINFUNCROLE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_CLIENT_CLIENT_ID = "client_id";
        public static readonly string COLUMN_CLIENT_CLIENT_SECRET = "client_secret";
        public static readonly string COLUMN_CLIENT_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_CLIENT_ACCESSTOKEN_EXPIRATION_TIMESPAN = "accesstoken_expiration_timespan";
        public static readonly string COLUMN_CLIENT_REG_DATE = "reg_date";
        public static readonly string COLUMN_CLIENT_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_CLIENT_UPD_DATE = "upd_date";
        public static readonly string COLUMN_CLIENT_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_CLIENT_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_FUNC_FUNCTION_ID = "function_id";
        public static readonly string COLUMN_FUNC_FUNCTION_NAME = "function_name";
        public static readonly string COLUMN_FUNC_FUNCTION_DETAIL = "function_detail";
        public static readonly string COLUMN_FUNC_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_FUNC_REG_DATE = "reg_date";
        public static readonly string COLUMN_FUNC_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_FUNC_UPD_DATE = "upd_date";
        public static readonly string COLUMN_FUNC_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_FUNC_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_ROLE_ROLE_ID = "role_id";
        public static readonly string COLUMN_ROLE_ROLE_NAME = "role_name";
        public static readonly string COLUMN_ROLE_REG_DATE = "reg_date";
        public static readonly string COLUMN_ROLE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_ROLE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_ROLE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_ROLE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_STAFF_STAFF_ID = "staff_id";
        public static readonly string COLUMN_STAFF_ACCOUNT = "account";
        public static readonly string COLUMN_STAFF_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_STAFF_REG_DATE = "reg_date";
        public static readonly string COLUMN_STAFF_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_STAFF_UPD_DATE = "upd_date";
        public static readonly string COLUMN_STAFF_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_STAFF_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_STAFF_EMAIL_ADDRESS = "email_address";
        public static readonly string COLUMN_STAFFROLE_STAFF_ROLE_ID = "staff_role_id";
        public static readonly string COLUMN_STAFFROLE_STAFF_ID = "staff_id";
        public static readonly string COLUMN_STAFFROLE_ROLE_ID = "role_id";
        public static readonly string COLUMN_STAFFROLE_REG_DATE = "reg_date";
        public static readonly string COLUMN_STAFFROLE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_STAFFROLE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_STAFFROLE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_STAFFROLE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_SYSTEM_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEM_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_SYSTEM_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_SYSTEM_OPENID_APPLICATIONID = "openid_applicationid";
        public static readonly string COLUMN_SYSTEM_OPENID_CLIENT_SECRET = "openid_client_secret";
        public static readonly string COLUMN_SYSTEM_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_SYSTEM_REG_DATE = "reg_date";
        public static readonly string COLUMN_SYSTEM_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_SYSTEM_UPD_DATE = "upd_date";
        public static readonly string COLUMN_SYSTEM_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_SYSTEM_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_SYSTEM_REPRESENTATIVE_MAIL_ADDRESS = "representative_mail_address";
        public static readonly string COLUMN_SYSTEMADMIN_SYSTEM_ADMIN_ID = "system_admin_id";
        public static readonly string COLUMN_SYSTEMADMIN_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEMADMIN_ADMIN_SECRET = "admin_secret";
        public static readonly string COLUMN_SYSTEMADMIN_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_SYSTEMADMIN_REG_DATE = "reg_date";
        public static readonly string COLUMN_SYSTEMADMIN_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_SYSTEMADMIN_UPD_DATE = "upd_date";
        public static readonly string COLUMN_SYSTEMADMIN_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_SYSTEMADMIN_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_SYSTEMFUNC_SYSTEMFUNC_ID = "systemfunc_id";
        public static readonly string COLUMN_SYSTEMFUNC_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEMFUNC_FUNCTION_ID = "function_id";
        public static readonly string COLUMN_SYSTEMFUNC_REG_DATE = "reg_date";
        public static readonly string COLUMN_SYSTEMFUNC_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_SYSTEMFUNC_UPD_DATE = "upd_date";
        public static readonly string COLUMN_SYSTEMFUNC_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_SYSTEMFUNC_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_USERINVITATION_USER_INVITATION_ID = "user_invitation_id";
        public static readonly string COLUMN_USERINVITATION_MAILADDRESS = "mailaddress";
        public static readonly string COLUMN_USERINVITATION_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_USERINVITATION_INVITATION_DATE = "invitation_date";
        public static readonly string COLUMN_USERINVITATION_EXPIRE_DATE = "expire_date";
        public static readonly string COLUMN_USERINVITATION_REGISTER_STAFF_ID = "register_staff_id";
        public static readonly string COLUMN_USERINVITATION_REGISTER_ACCOUNT = "register_account";
        public static readonly string COLUMN_USERINVITATION_IS_USED = "is_used";
        public static readonly string COLUMN_USERINVITATION_REG_DATE = "reg_date";
        public static readonly string COLUMN_USERINVITATION_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_USERINVITATION_UPD_DATE = "upd_date";
        public static readonly string COLUMN_USERINVITATION_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_USERINVITATION_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_USERINVITATION_ROLE_ID = "role_id";
        public static readonly string COLUMN_USERINVITATION_STAFF_ID = "staff_id";
        public static readonly string COLUMN_VENDOR_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDOR_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDOR_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_VENDOR_IS_DATA_OFFER = "is_data_offer";
        public static readonly string COLUMN_VENDOR_IS_DATA_USE = "is_data_use";
        public static readonly string COLUMN_VENDOR_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDOR_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_VENDOR_UPD_DATE = "upd_date";
        public static readonly string COLUMN_VENDOR_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_VENDOR_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDOR_REPRESENTATIVE_MAIL_ADDRESS = "representative_mail_address";
        public static readonly string COLUMN_CONST_CONST_KEY = "const_key";
        public static readonly string COLUMN_CONST_CONST_VALUE = "const_value";
    }

    public enum Tables
    {
        Locale,
        SystemMultiLanguage,
        VendorMultiLanguage,
        Dummy,
        ClientCertificate,
        AccessToken,
        AdminFunc,
        AdminFuncRole,
        Client,
        Func,
        Role,
        Staff,
        StaffRole,
        System,
        SystemAdmin,
        SystemFunc,
        UserInvitation,
        Vendor,
        Const,
    }

    public enum AuthorityLocale
    {
        [DbMap("Authority","Locale","locale_code")]
        locale_code,
        [DbMap("Authority","Locale","reg_date")]
        reg_date,
        [DbMap("Authority","Locale","reg_username")]
        reg_username,
        [DbMap("Authority","Locale","upd_date")]
        upd_date,
        [DbMap("Authority","Locale","upd_username")]
        upd_username,
        [DbMap("Authority","Locale","is_active")]
        is_active,
    }
    public enum AuthoritySystemMultiLanguage
    {
        [DbMap("Authority","SystemMultiLanguage","system_lang_id")]
        system_lang_id,
        [DbMap("Authority","SystemMultiLanguage","system_id")]
        system_id,
        [DbMap("Authority","SystemMultiLanguage","locale_code")]
        locale_code,
        [DbMap("Authority","SystemMultiLanguage","system_name")]
        system_name,
        [DbMap("Authority","SystemMultiLanguage","reg_date")]
        reg_date,
        [DbMap("Authority","SystemMultiLanguage","reg_username")]
        reg_username,
        [DbMap("Authority","SystemMultiLanguage","upd_date")]
        upd_date,
        [DbMap("Authority","SystemMultiLanguage","upd_username")]
        upd_username,
        [DbMap("Authority","SystemMultiLanguage","is_active")]
        is_active,
    }
    public enum AuthorityVendorMultiLanguage
    {
        [DbMap("Authority","VendorMultiLanguage","vendor_lang_id")]
        vendor_lang_id,
        [DbMap("Authority","VendorMultiLanguage","vendor_id")]
        vendor_id,
        [DbMap("Authority","VendorMultiLanguage","locale_code")]
        locale_code,
        [DbMap("Authority","VendorMultiLanguage","vendor_name")]
        vendor_name,
        [DbMap("Authority","VendorMultiLanguage","reg_date")]
        reg_date,
        [DbMap("Authority","VendorMultiLanguage","reg_username")]
        reg_username,
        [DbMap("Authority","VendorMultiLanguage","upd_date")]
        upd_date,
        [DbMap("Authority","VendorMultiLanguage","upd_username")]
        upd_username,
        [DbMap("Authority","VendorMultiLanguage","is_active")]
        is_active,
    }
    public enum AuthorityDummy
    {
        [DbMap("Authority","Dummy","p_key")]
        p_key,
        [DbMap("Authority","Dummy","data")]
        data,
        [DbMap("Authority","Dummy","num")]
        num,
        [DbMap("Authority","Dummy","str")]
        str,
    }
    public enum AuthorityClientCertificate
    {
        [DbMap("Authority","ClientCertificate","clientcertificate_id")]
        clientcertificate_id,
        [DbMap("Authority","ClientCertificate","client_certificate_string")]
        client_certificate_string,
        [DbMap("Authority","ClientCertificate","vendor_id")]
        vendor_id,
        [DbMap("Authority","ClientCertificate","system_id")]
        system_id,
        [DbMap("Authority","ClientCertificate","reg_date")]
        reg_date,
        [DbMap("Authority","ClientCertificate","reg_username")]
        reg_username,
        [DbMap("Authority","ClientCertificate","upd_date")]
        upd_date,
        [DbMap("Authority","ClientCertificate","upd_username")]
        upd_username,
        [DbMap("Authority","ClientCertificate","is_active")]
        is_active,
    }
    public enum AuthorityAccessToken
    {
        [DbMap("Authority","AccessToken","accesstoken_id")]
        accesstoken_id,
        [DbMap("Authority","AccessToken","client_id")]
        client_id,
        [DbMap("Authority","AccessToken","system_id")]
        system_id,
        [DbMap("Authority","AccessToken","expiration_datetime")]
        expiration_datetime,
        [DbMap("Authority","AccessToken","reg_date")]
        reg_date,
        [DbMap("Authority","AccessToken","reg_username")]
        reg_username,
        [DbMap("Authority","AccessToken","upd_date")]
        upd_date,
        [DbMap("Authority","AccessToken","upd_username")]
        upd_username,
        [DbMap("Authority","AccessToken","is_active")]
        is_active,
    }
    public enum AuthorityAdminFunc
    {
        [DbMap("Authority","AdminFunc","admin_func_id")]
        admin_func_id,
        [DbMap("Authority","AdminFunc","admin_name")]
        admin_name,
        [DbMap("Authority","AdminFunc","reg_date")]
        reg_date,
        [DbMap("Authority","AdminFunc","reg_username")]
        reg_username,
        [DbMap("Authority","AdminFunc","upd_date")]
        upd_date,
        [DbMap("Authority","AdminFunc","upd_username")]
        upd_username,
        [DbMap("Authority","AdminFunc","is_active")]
        is_active,
        [DbMap("Authority","AdminFunc","display_description")]
        display_description,
    }
    public enum AuthorityAdminFuncRole
    {
        [DbMap("Authority","AdminFuncRole","admin_func_role_id")]
        admin_func_role_id,
        [DbMap("Authority","AdminFuncRole","admin_func_id")]
        admin_func_id,
        [DbMap("Authority","AdminFuncRole","role_id")]
        role_id,
        [DbMap("Authority","AdminFuncRole","is_read")]
        is_read,
        [DbMap("Authority","AdminFuncRole","is_write")]
        is_write,
        [DbMap("Authority","AdminFuncRole","reg_date")]
        reg_date,
        [DbMap("Authority","AdminFuncRole","reg_username")]
        reg_username,
        [DbMap("Authority","AdminFuncRole","upd_date")]
        upd_date,
        [DbMap("Authority","AdminFuncRole","upd_username")]
        upd_username,
        [DbMap("Authority","AdminFuncRole","is_active")]
        is_active,
    }
    public enum AuthorityClient
    {
        [DbMap("Authority","Client","client_id")]
        client_id,
        [DbMap("Authority","Client","client_secret")]
        client_secret,
        [DbMap("Authority","Client","system_id")]
        system_id,
        [DbMap("Authority","Client","accesstoken_expiration_timespan")]
        accesstoken_expiration_timespan,
        [DbMap("Authority","Client","reg_date")]
        reg_date,
        [DbMap("Authority","Client","reg_username")]
        reg_username,
        [DbMap("Authority","Client","upd_date")]
        upd_date,
        [DbMap("Authority","Client","upd_username")]
        upd_username,
        [DbMap("Authority","Client","is_active")]
        is_active,
    }
    public enum AuthorityFunc
    {
        [DbMap("Authority","Func","function_id")]
        function_id,
        [DbMap("Authority","Func","function_name")]
        function_name,
        [DbMap("Authority","Func","function_detail")]
        function_detail,
        [DbMap("Authority","Func","is_enable")]
        is_enable,
        [DbMap("Authority","Func","reg_date")]
        reg_date,
        [DbMap("Authority","Func","reg_username")]
        reg_username,
        [DbMap("Authority","Func","upd_date")]
        upd_date,
        [DbMap("Authority","Func","upd_username")]
        upd_username,
        [DbMap("Authority","Func","is_active")]
        is_active,
    }
    public enum AuthorityRole
    {
        [DbMap("Authority","Role","role_id")]
        role_id,
        [DbMap("Authority","Role","role_name")]
        role_name,
        [DbMap("Authority","Role","reg_date")]
        reg_date,
        [DbMap("Authority","Role","reg_username")]
        reg_username,
        [DbMap("Authority","Role","upd_date")]
        upd_date,
        [DbMap("Authority","Role","upd_username")]
        upd_username,
        [DbMap("Authority","Role","is_active")]
        is_active,
    }
    public enum AuthorityStaff
    {
        [DbMap("Authority","Staff","staff_id")]
        staff_id,
        [DbMap("Authority","Staff","account")]
        account,
        [DbMap("Authority","Staff","vendor_id")]
        vendor_id,
        [DbMap("Authority","Staff","reg_date")]
        reg_date,
        [DbMap("Authority","Staff","reg_username")]
        reg_username,
        [DbMap("Authority","Staff","upd_date")]
        upd_date,
        [DbMap("Authority","Staff","upd_username")]
        upd_username,
        [DbMap("Authority","Staff","is_active")]
        is_active,
        [DbMap("Authority","Staff","email_address")]
        email_address,
    }
    public enum AuthorityStaffRole
    {
        [DbMap("Authority","StaffRole","staff_role_id")]
        staff_role_id,
        [DbMap("Authority","StaffRole","staff_id")]
        staff_id,
        [DbMap("Authority","StaffRole","role_id")]
        role_id,
        [DbMap("Authority","StaffRole","reg_date")]
        reg_date,
        [DbMap("Authority","StaffRole","reg_username")]
        reg_username,
        [DbMap("Authority","StaffRole","upd_date")]
        upd_date,
        [DbMap("Authority","StaffRole","upd_username")]
        upd_username,
        [DbMap("Authority","StaffRole","is_active")]
        is_active,
    }
    public enum AuthoritySystem
    {
        [DbMap("Authority","System","system_id")]
        system_id,
        [DbMap("Authority","System","vendor_id")]
        vendor_id,
        [DbMap("Authority","System","system_name")]
        system_name,
        [DbMap("Authority","System","openid_applicationid")]
        openid_applicationid,
        [DbMap("Authority","System","openid_client_secret")]
        openid_client_secret,
        [DbMap("Authority","System","is_enable")]
        is_enable,
        [DbMap("Authority","System","reg_date")]
        reg_date,
        [DbMap("Authority","System","reg_username")]
        reg_username,
        [DbMap("Authority","System","upd_date")]
        upd_date,
        [DbMap("Authority","System","upd_username")]
        upd_username,
        [DbMap("Authority","System","is_active")]
        is_active,
        [DbMap("Authority","System","representative_mail_address")]
        representative_mail_address,
    }
    public enum AuthoritySystemAdmin
    {
        [DbMap("Authority","SystemAdmin","system_admin_id")]
        system_admin_id,
        [DbMap("Authority","SystemAdmin","system_id")]
        system_id,
        [DbMap("Authority","SystemAdmin","admin_secret")]
        admin_secret,
        [DbMap("Authority","SystemAdmin","is_enable")]
        is_enable,
        [DbMap("Authority","SystemAdmin","reg_date")]
        reg_date,
        [DbMap("Authority","SystemAdmin","reg_username")]
        reg_username,
        [DbMap("Authority","SystemAdmin","upd_date")]
        upd_date,
        [DbMap("Authority","SystemAdmin","upd_username")]
        upd_username,
        [DbMap("Authority","SystemAdmin","is_active")]
        is_active,
    }
    public enum AuthoritySystemFunc
    {
        [DbMap("Authority","SystemFunc","systemfunc_id")]
        systemfunc_id,
        [DbMap("Authority","SystemFunc","system_id")]
        system_id,
        [DbMap("Authority","SystemFunc","function_id")]
        function_id,
        [DbMap("Authority","SystemFunc","reg_date")]
        reg_date,
        [DbMap("Authority","SystemFunc","reg_username")]
        reg_username,
        [DbMap("Authority","SystemFunc","upd_date")]
        upd_date,
        [DbMap("Authority","SystemFunc","upd_username")]
        upd_username,
        [DbMap("Authority","SystemFunc","is_active")]
        is_active,
    }
    public enum AuthorityUserInvitation
    {
        [DbMap("Authority","UserInvitation","user_invitation_id")]
        user_invitation_id,
        [DbMap("Authority","UserInvitation","mailaddress")]
        mailaddress,
        [DbMap("Authority","UserInvitation","vendor_id")]
        vendor_id,
        [DbMap("Authority","UserInvitation","invitation_date")]
        invitation_date,
        [DbMap("Authority","UserInvitation","expire_date")]
        expire_date,
        [DbMap("Authority","UserInvitation","register_staff_id")]
        register_staff_id,
        [DbMap("Authority","UserInvitation","register_account")]
        register_account,
        [DbMap("Authority","UserInvitation","is_used")]
        is_used,
        [DbMap("Authority","UserInvitation","reg_date")]
        reg_date,
        [DbMap("Authority","UserInvitation","reg_username")]
        reg_username,
        [DbMap("Authority","UserInvitation","upd_date")]
        upd_date,
        [DbMap("Authority","UserInvitation","upd_username")]
        upd_username,
        [DbMap("Authority","UserInvitation","is_active")]
        is_active,
        [DbMap("Authority","UserInvitation","role_id")]
        role_id,
        [DbMap("Authority","UserInvitation","staff_id")]
        staff_id,
    }
    public enum AuthorityVendor
    {
        [DbMap("Authority","Vendor","vendor_id")]
        vendor_id,
        [DbMap("Authority","Vendor","vendor_name")]
        vendor_name,
        [DbMap("Authority","Vendor","is_enable")]
        is_enable,
        [DbMap("Authority","Vendor","is_data_offer")]
        is_data_offer,
        [DbMap("Authority","Vendor","is_data_use")]
        is_data_use,
        [DbMap("Authority","Vendor","reg_date")]
        reg_date,
        [DbMap("Authority","Vendor","reg_username")]
        reg_username,
        [DbMap("Authority","Vendor","upd_date")]
        upd_date,
        [DbMap("Authority","Vendor","upd_username")]
        upd_username,
        [DbMap("Authority","Vendor","is_active")]
        is_active,
        [DbMap("Authority","Vendor","representative_mail_address")]
        representative_mail_address,
    }
    public enum AuthorityConst
    {
        [DbMap("Authority","Const","const_key")]
        const_key,
        [DbMap("Authority","Const","const_value")]
        const_value,
    }


    /// <summary>
    /// A class which represents the Locale table.
    /// </summary>
	[Table("Locale")]
	public partial class DB_Locale
	{
		[Key]
		[MaxLength(20)]
		public virtual string locale_code { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_SystemMultiLanguage> SystemMultiLanguage { get; set; }
		public virtual IEnumerable<DB_VendorMultiLanguage> VendorMultiLanguage { get; set; }
	}


    /// <summary>
    /// A class which represents the SystemMultiLanguage table.
    /// </summary>
	[Table("SystemMultiLanguage")]
	public partial class DB_SystemMultiLanguage
	{
		[Key]
		public virtual Guid system_lang_id { get; set; }
		public virtual Guid system_id { get; set; }
		[MaxLength(20)]
		public virtual string locale_code { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_System DB_System { get; set; }
		public virtual DB_Locale DB_Locale { get; set; }
	}


    /// <summary>
    /// A class which represents the VendorMultiLanguage table.
    /// </summary>
	[Table("VendorMultiLanguage")]
	public partial class DB_VendorMultiLanguage
	{
		[Key]
		public virtual Guid vendor_lang_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(20)]
		public virtual string locale_code { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
		public virtual DB_Locale DB_Locale { get; set; }
	}


    /// <summary>
    /// A class which represents the Dummy table.
    /// </summary>
	[Table("Dummy")]
	public partial class DB_Dummy
	{
		[Key]
		public virtual Guid p_key { get; set; }
		public virtual int? data { get; set; }
		public virtual decimal? num { get; set; }
		[MaxLength(10)]
		public virtual string str { get; set; }
	}


    /// <summary>
    /// A class which represents the ClientCertificate table.
    /// </summary>
	[Table("ClientCertificate")]
	public partial class DB_ClientCertificate
	{
		[Key]
		public virtual Guid clientcertificate_id { get; set; }
		[MaxLength(1000)]
		public virtual string client_certificate_string { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
		public virtual DB_System DB_System { get; set; }
	}


    /// <summary>
    /// A class which represents the AccessToken table.
    /// </summary>
	[Table("AccessToken")]
	public partial class DB_AccessToken
	{
		[Key]
		public virtual Guid accesstoken_id { get; set; }
		public virtual Guid client_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual DateTime expiration_datetime { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
	}


    /// <summary>
    /// A class which represents the AdminFunc table.
    /// </summary>
	[Table("AdminFunc")]
	public partial class DB_AdminFunc
	{
		[Key]
		public virtual Guid admin_func_id { get; set; }
		[MaxLength(256)]
		public virtual string admin_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		[MaxLength(260)]
		public virtual string display_description { get; set; }
		public virtual IEnumerable<DB_AdminFuncRole> AdminFuncRole { get; set; }
	}


    /// <summary>
    /// A class which represents the AdminFuncRole table.
    /// </summary>
	[Table("AdminFuncRole")]
	public partial class DB_AdminFuncRole
	{
		[Key]
		public virtual Guid admin_func_role_id { get; set; }
		public virtual Guid admin_func_id { get; set; }
		public virtual Guid role_id { get; set; }
		public virtual bool is_read { get; set; }
		public virtual bool is_write { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_AdminFunc DB_AdminFunc { get; set; }
		public virtual DB_Role DB_Role { get; set; }
	}


    /// <summary>
    /// A class which represents the Client table.
    /// </summary>
	[Table("Client")]
	public partial class DB_Client
	{
		[Key]
		public virtual Guid client_id { get; set; }
		[MaxLength(260)]
		public virtual string client_secret { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual long accesstoken_expiration_timespan { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_System DB_System { get; set; }
	}


    /// <summary>
    /// A class which represents the Func table.
    /// </summary>
	[Table("Func")]
	public partial class DB_Func
	{
		[Key]
		public virtual Guid function_id { get; set; }
		[MaxLength(4000)]
		public virtual string function_name { get; set; }
		[MaxLength(256)]
		public virtual string function_detail { get; set; }
		public virtual bool is_enable { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_SystemFunc> SystemFunc { get; set; }
	}


    /// <summary>
    /// A class which represents the Role table.
    /// </summary>
	[Table("Role")]
	public partial class DB_Role
	{
		[Key]
		public virtual Guid role_id { get; set; }
		[MaxLength(100)]
		public virtual string role_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_AdminFuncRole> AdminFuncRole { get; set; }
		public virtual IEnumerable<DB_StaffRole> StaffRole { get; set; }
		public virtual IEnumerable<DB_UserInvitation> UserInvitation { get; set; }
	}


    /// <summary>
    /// A class which represents the Staff table.
    /// </summary>
	[Table("Staff")]
	public partial class DB_Staff
	{
		[Key]
		public virtual Guid staff_id { get; set; }
		[MaxLength(100)]
		public virtual string account { get; set; }
		public virtual Guid vendor_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		[MaxLength(256)]
		public virtual string email_address { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
		public virtual IEnumerable<DB_UserInvitation> UserInvitation { get; set; }
	}


    /// <summary>
    /// A class which represents the StaffRole table.
    /// </summary>
	[Table("StaffRole")]
	public partial class DB_StaffRole
	{
		[Key]
		public virtual Guid staff_role_id { get; set; }
		public virtual Guid staff_id { get; set; }
		public virtual Guid role_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_Role DB_Role { get; set; }
	}


    /// <summary>
    /// A class which represents the System table.
    /// </summary>
	[Table("System")]
	public partial class DB_System
	{
		[Key]
		public virtual Guid system_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		[MaxLength(128)]
		public virtual string openid_applicationid { get; set; }
		[MaxLength(260)]
		public virtual string openid_client_secret { get; set; }
		public virtual bool is_enable { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		[MaxLength(260)]
		public virtual string representative_mail_address { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
		public virtual IEnumerable<DB_SystemMultiLanguage> SystemMultiLanguage { get; set; }
		public virtual IEnumerable<DB_ClientCertificate> ClientCertificate { get; set; }
		public virtual IEnumerable<DB_Client> Client { get; set; }
		public virtual IEnumerable<DB_SystemAdmin> SystemAdmin { get; set; }
		public virtual IEnumerable<DB_SystemFunc> SystemFunc { get; set; }
	}


    /// <summary>
    /// A class which represents the SystemAdmin table.
    /// </summary>
	[Table("SystemAdmin")]
	public partial class DB_SystemAdmin
	{
		[Key]
		public virtual Guid system_admin_id { get; set; }
		public virtual Guid? system_id { get; set; }
		[MaxLength(260)]
		public virtual string admin_secret { get; set; }
		public virtual bool is_enable { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_System DB_System { get; set; }
	}


    /// <summary>
    /// A class which represents the SystemFunc table.
    /// </summary>
	[Table("SystemFunc")]
	public partial class DB_SystemFunc
	{
		[Key]
		public virtual Guid systemfunc_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual Guid function_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_System DB_System { get; set; }
		public virtual DB_Func DB_Func { get; set; }
	}


    /// <summary>
    /// A class which represents the UserInvitation table.
    /// </summary>
	[Table("UserInvitation")]
	public partial class DB_UserInvitation
	{
		[Key]
		public virtual Guid user_invitation_id { get; set; }
		[MaxLength(256)]
		public virtual string mailaddress { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual DateTime invitation_date { get; set; }
		public virtual DateTime expire_date { get; set; }
		public virtual Guid? register_staff_id { get; set; }
		public virtual Guid? register_account { get; set; }
		public virtual bool is_used { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual Guid? role_id { get; set; }
		public virtual Guid? staff_id { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
		public virtual DB_Role DB_Role { get; set; }
		public virtual DB_Staff DB_Staff { get; set; }
	}


    /// <summary>
    /// A class which represents the Vendor table.
    /// </summary>
	[Table("Vendor")]
	public partial class DB_Vendor
	{
		[Key]
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		public virtual bool is_enable { get; set; }
		public virtual bool is_data_offer { get; set; }
		public virtual bool is_data_use { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		[MaxLength(260)]
		public virtual string representative_mail_address { get; set; }
		public virtual IEnumerable<DB_VendorMultiLanguage> VendorMultiLanguage { get; set; }
		public virtual IEnumerable<DB_ClientCertificate> ClientCertificate { get; set; }
		public virtual IEnumerable<DB_Staff> Staff { get; set; }
		public virtual IEnumerable<DB_System> System { get; set; }
		public virtual IEnumerable<DB_UserInvitation> UserInvitation { get; set; }
	}


    /// <summary>
    /// A class which represents the Const table.
    /// </summary>
	[Table("Const")]
	public partial class DB_Const
	{
		[Key]
		[MaxLength(100)]
		public virtual string const_key { get; set; }
		[MaxLength(1000)]
		public virtual string const_value { get; set; }
	}

}
