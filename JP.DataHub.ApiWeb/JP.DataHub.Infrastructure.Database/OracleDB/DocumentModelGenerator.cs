
// This file was automatically generated by the Dapper.SimpleCRUD T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Document`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=tcp:jpdatahubdev.database.windows.net,1433;Initial Catalog=DocumentSqlServer;Persist Security Info=False;User ID=;Password=******;`
//     Include Views:          `True`

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Collections.Generic;
using JP.DataHub.Com.Validations.Attributes;

namespace JP.DataHub.Infrastructure.Database.Document
{
    public static class DatabaseConst
    {
        public const string DATABASE = "Document";

        public static readonly string COLUMN_AGREEMENT_AGREEMENT_ID = "agreement_id";
        public static readonly string COLUMN_AGREEMENT_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_AGREEMENT_TITLE = "title";
        public static readonly string COLUMN_AGREEMENT_DETAIL = "detail";
        public static readonly string COLUMN_AGREEMENT_REG_DATE = "reg_date";
        public static readonly string COLUMN_AGREEMENT_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_AGREEMENT_UPD_DATE = "upd_date";
        public static readonly string COLUMN_AGREEMENT_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_AGREEMENT_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_CATEGORY_CATEGORY_ID = "category_id";
        public static readonly string COLUMN_CATEGORY_CATEGORY_NAME = "category_name";
        public static readonly string COLUMN_CATEGORY_ORDER_NO = "order_no";
        public static readonly string COLUMN_CATEGORY_REG_DATE = "reg_date";
        public static readonly string COLUMN_CATEGORY_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_CATEGORY_UPD_DATE = "upd_date";
        public static readonly string COLUMN_CATEGORY_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_CATEGORY_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DOCUMENT_DOCUMENT_ID = "document_id";
        public static readonly string COLUMN_DOCUMENT_TITLE = "title";
        public static readonly string COLUMN_DOCUMENT_DETAIL = "detail";
        public static readonly string COLUMN_DOCUMENT_CATEGORY_ID = "category_id";
        public static readonly string COLUMN_DOCUMENT_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_DOCUMENT_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_DOCUMENT_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_DOCUMENT_IS_ADMIN_CHECK = "is_admin_check";
        public static readonly string COLUMN_DOCUMENT_IS_ADMIN_STOP = "is_admin_stop";
        public static readonly string COLUMN_DOCUMENT_AGREEMENT_ID = "agreement_id";
        public static readonly string COLUMN_DOCUMENT_REG_DATE = "reg_date";
        public static readonly string COLUMN_DOCUMENT_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DOCUMENT_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DOCUMENT_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DOCUMENT_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DOCUMENT_IS_PUBLIC_PORTAL = "is_public_portal";
        public static readonly string COLUMN_DOCUMENT_IS_PUBLIC_ADMIN = "is_public_admin";
        public static readonly string COLUMN_DOCUMENT_IS_PUBLIC_PORTAL_HIDDEN = "is_public_portal_hidden";
        public static readonly string COLUMN_DOCUMENT_IS_PUBLIC_ADMIN_HIDDEN = "is_public_admin_hidden";
        public static readonly string COLUMN_DOCUMENT_PASSWORD = "password";
        public static readonly string COLUMN_FILE_FILE_ID = "file_id";
        public static readonly string COLUMN_FILE_DOCUMENT_ID = "document_id";
        public static readonly string COLUMN_FILE_TITLE = "title";
        public static readonly string COLUMN_FILE_URL = "url";
        public static readonly string COLUMN_FILE_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_FILE_REG_DATE = "reg_date";
        public static readonly string COLUMN_FILE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_FILE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_FILE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_FILE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_FILE_FILE_UPDATE_DATE = "file_update_date";
        public static readonly string COLUMN_FILE_HTML_LINK = "html_link";
        public static readonly string COLUMN_FILE_ORDER_NO = "order_no";
        public static readonly string COLUMN_SYSTEM_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEM_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_SYSTEM_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_SYSTEM_OPENID_APPLICATIONID = "openid_applicationid";
        public static readonly string COLUMN_SYSTEM_OPENID_CLIENT_SECRET = "openid_client_secret";
        public static readonly string COLUMN_SYSTEM_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_SYSTEM_REG_DATE = "reg_date";
        public static readonly string COLUMN_SYSTEM_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_SYSTEM_UPD_DATE = "upd_date";
        public static readonly string COLUMN_SYSTEM_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_SYSTEM_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDOR_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDOR_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDOR_IS_ENABLE = "is_enable";
        public static readonly string COLUMN_VENDOR_IS_DATA_OFFER = "is_data_offer";
        public static readonly string COLUMN_VENDOR_IS_DATA_USE = "is_data_use";
        public static readonly string COLUMN_VENDOR_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDOR_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_VENDOR_UPD_DATE = "upd_date";
        public static readonly string COLUMN_VENDOR_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_VENDOR_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_STAFF_STAFF_ID = "staff_id";
        public static readonly string COLUMN_STAFF_ACCOUNT = "account";
        public static readonly string COLUMN_STAFF_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_STAFF_REG_DATE = "reg_date";
        public static readonly string COLUMN_STAFF_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_STAFF_UPD_DATE = "upd_date";
        public static readonly string COLUMN_STAFF_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_STAFF_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_STAFF_EMAIL_ADDRESS = "email_address";
    }

    public enum Tables
    {
        Agreement,
        Category,
        Document,
        File,
        System,
        Vendor,
        Staff,
    }

    public enum DocumentAgreement
    {
        [DbMap("Document","Agreement","agreement_id")]
        agreement_id,
        [DbMap("Document","Agreement","vendor_id")]
        vendor_id,
        [DbMap("Document","Agreement","title")]
        title,
        [DbMap("Document","Agreement","detail")]
        detail,
        [DbMap("Document","Agreement","reg_date")]
        reg_date,
        [DbMap("Document","Agreement","reg_username")]
        reg_username,
        [DbMap("Document","Agreement","upd_date")]
        upd_date,
        [DbMap("Document","Agreement","upd_username")]
        upd_username,
        [DbMap("Document","Agreement","is_active")]
        is_active,
    }
    public enum DocumentCategory
    {
        [DbMap("Document","Category","category_id")]
        category_id,
        [DbMap("Document","Category","category_name")]
        category_name,
        [DbMap("Document","Category","order_no")]
        order_no,
        [DbMap("Document","Category","reg_date")]
        reg_date,
        [DbMap("Document","Category","reg_username")]
        reg_username,
        [DbMap("Document","Category","upd_date")]
        upd_date,
        [DbMap("Document","Category","upd_username")]
        upd_username,
        [DbMap("Document","Category","is_active")]
        is_active,
    }
    public enum DocumentDocument
    {
        [DbMap("Document","Document","document_id")]
        document_id,
        [DbMap("Document","Document","title")]
        title,
        [DbMap("Document","Document","detail")]
        detail,
        [DbMap("Document","Document","category_id")]
        category_id,
        [DbMap("Document","Document","vendor_id")]
        vendor_id,
        [DbMap("Document","Document","system_id")]
        system_id,
        [DbMap("Document","Document","is_enable")]
        is_enable,
        [DbMap("Document","Document","is_admin_check")]
        is_admin_check,
        [DbMap("Document","Document","is_admin_stop")]
        is_admin_stop,
        [DbMap("Document","Document","agreement_id")]
        agreement_id,
        [DbMap("Document","Document","reg_date")]
        reg_date,
        [DbMap("Document","Document","reg_username")]
        reg_username,
        [DbMap("Document","Document","upd_date")]
        upd_date,
        [DbMap("Document","Document","upd_username")]
        upd_username,
        [DbMap("Document","Document","is_active")]
        is_active,
        [DbMap("Document","Document","is_public_portal")]
        is_public_portal,
        [DbMap("Document","Document","is_public_admin")]
        is_public_admin,
        [DbMap("Document","Document","is_public_portal_hidden")]
        is_public_portal_hidden,
        [DbMap("Document","Document","is_public_admin_hidden")]
        is_public_admin_hidden,
        [DbMap("Document","Document","password")]
        password,
    }
    public enum DocumentFile
    {
        [DbMap("Document","Files","file_id")]
        file_id,
        [DbMap("Document","Files","document_id")]
        document_id,
        [DbMap("Document","Files","title")]
        title,
        [DbMap("Document","Files","url")]
        url,
        [DbMap("Document","Files","is_enable")]
        is_enable,
        [DbMap("Document","Files","reg_date")]
        reg_date,
        [DbMap("Document","Files","reg_username")]
        reg_username,
        [DbMap("Document","Files","upd_date")]
        upd_date,
        [DbMap("Document","Files","upd_username")]
        upd_username,
        [DbMap("Document","Files","is_active")]
        is_active,
        [DbMap("Document","Files","file_update_date")]
        file_update_date,
        [DbMap("Document","Files","html_link")]
        html_link,
        [DbMap("Document","Files","order_no")]
        order_no,
    }
    public enum DocumentSystem
    {
        [DbMap("Document","System","system_id")]
        system_id,
        [DbMap("Document","System","vendor_id")]
        vendor_id,
        [DbMap("Document","System","system_name")]
        system_name,
        [DbMap("Document","System","openid_applicationid")]
        openid_applicationid,
        [DbMap("Document","System","openid_client_secret")]
        openid_client_secret,
        [DbMap("Document","System","is_enable")]
        is_enable,
        [DbMap("Document","System","reg_date")]
        reg_date,
        [DbMap("Document","System","reg_username")]
        reg_username,
        [DbMap("Document","System","upd_date")]
        upd_date,
        [DbMap("Document","System","upd_username")]
        upd_username,
        [DbMap("Document","System","is_active")]
        is_active,
    }
    public enum DocumentVendor
    {
        [DbMap("Document","Vendor","vendor_id")]
        vendor_id,
        [DbMap("Document","Vendor","vendor_name")]
        vendor_name,
        [DbMap("Document","Vendor","is_enable")]
        is_enable,
        [DbMap("Document","Vendor","is_data_offer")]
        is_data_offer,
        [DbMap("Document","Vendor","is_data_use")]
        is_data_use,
        [DbMap("Document","Vendor","reg_date")]
        reg_date,
        [DbMap("Document","Vendor","reg_username")]
        reg_username,
        [DbMap("Document","Vendor","upd_date")]
        upd_date,
        [DbMap("Document","Vendor","upd_username")]
        upd_username,
        [DbMap("Document","Vendor","is_active")]
        is_active,
    }
    public enum DocumentStaff
    {
        [DbMap("Document","Staff","staff_id")]
        staff_id,
        [DbMap("Document","Staff","account")]
        account,
        [DbMap("Document","Staff","vendor_id")]
        vendor_id,
        [DbMap("Document","Staff","reg_date")]
        reg_date,
        [DbMap("Document","Staff","reg_username")]
        reg_username,
        [DbMap("Document","Staff","upd_date")]
        upd_date,
        [DbMap("Document","Staff","upd_username")]
        upd_username,
        [DbMap("Document","Staff","is_active")]
        is_active,
        [DbMap("Document","Staff","email_address")]
        email_address,
    }


    /// <summary>
    /// A class which represents the Agreement table.
    /// </summary>
	[Table("Agreement")]
	public partial class DB_Agreement
	{
		[Key]
		public virtual Guid agreement_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(1000)]
		public virtual string title { get; set; }
		[MaxLength(1000)]
		public virtual string detail { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_Document> Document { get; set; }
	}


    /// <summary>
    /// A class which represents the Category table.
    /// </summary>
	[Table("Category")]
	public partial class DB_Category
	{
		[Key]
		public virtual Guid category_id { get; set; }
		[MaxLength(100)]
		public virtual string category_name { get; set; }
		public virtual int order_no { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_Document> Document { get; set; }
	}


    /// <summary>
    /// A class which represents the Document table.
    /// </summary>
	[Table("Document")]
	public partial class DB_Document
	{
		[Key]
		public virtual Guid document_id { get; set; }
		[MaxLength(100)]
		public virtual string title { get; set; }
		[MaxLength(1000)]
		public virtual string detail { get; set; }
		public virtual Guid category_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual bool is_enable { get; set; }
		public virtual bool is_admin_check { get; set; }
		public virtual bool is_admin_stop { get; set; }
		public virtual Guid? agreement_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual bool is_public_portal { get; set; }
		public virtual bool is_public_admin { get; set; }
		public virtual bool is_public_portal_hidden { get; set; }
		public virtual bool is_public_admin_hidden { get; set; }
		[MaxLength(128)]
		public virtual string password { get; set; }
		public virtual DB_Category DB_Category { get; set; }
		public virtual DB_Agreement DB_Agreement { get; set; }
		public virtual IEnumerable<DB_File> File { get; set; }
	}


    /// <summary>
    /// A class which represents the File table.
    /// </summary>
	[Table("Files")]
	public partial class DB_File
	{
		[Key]
		public virtual Guid file_id { get; set; }
		public virtual Guid? document_id { get; set; }
		[MaxLength(100)]
		public virtual string title { get; set; }
		[MaxLength(512)]
		public virtual string url { get; set; }
		public virtual bool is_enable { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DateTime file_update_date { get; set; }
		[MaxLength(512)]
		public virtual string html_link { get; set; }
		public virtual int order_no { get; set; }
		public virtual DB_Document DB_Document { get; set; }
	}


    /// <summary>
    /// A class which represents the System table.
    /// </summary>
	[Table("System")]
	public partial class DB_System
	{
		[Key]
		public virtual Guid system_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		[MaxLength(128)]
		public virtual string openid_applicationid { get; set; }
		[MaxLength(260)]
		public virtual string openid_client_secret { get; set; }
		public virtual bool is_enable { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
	}


    /// <summary>
    /// A class which represents the Vendor table.
    /// </summary>
	[Table("Vendor")]
	public partial class DB_Vendor
	{
		[Key]
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		public virtual bool is_enable { get; set; }
		public virtual bool is_data_offer { get; set; }
		public virtual bool is_data_use { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_System> System { get; set; }
		public virtual IEnumerable<DB_Staff> Staff { get; set; }
	}


    /// <summary>
    /// A class which represents the Staff table.
    /// </summary>
	[Table("Staff")]
	public partial class DB_Staff
	{
		[Key]
		public virtual Guid staff_id { get; set; }
		[MaxLength(100)]
		public virtual string account { get; set; }
		public virtual Guid vendor_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		[MaxLength(256)]
		public virtual string email_address { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
	}

}
