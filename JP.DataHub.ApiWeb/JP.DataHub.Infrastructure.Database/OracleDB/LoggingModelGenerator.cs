
// This file was automatically generated by the Dapper.SimpleCRUD T4 Template
// Do not make changes directly to this file - edit the template instead
//
// The following connection settings were used to generate this file
//
//     Connection String Name: `Logging`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=tcp:jpdatahubdev.database.windows.net,1433;Initial Catalog=LoggingSqlServer;Persist Security Info=False;User ID=;Password=******;`
//     Include Views:          `True`

using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Collections.Generic;
using JP.DataHub.Com.Validations.Attributes;

namespace JP.DataHub.Infrastructure.Database.Logging
{
    public static class DatabaseConst
    {
        public const string DATABASE = "Logging";

        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_CONTAINER_DYNAMIC_SEPARATION_ID = "container_dynamic_separation_id";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_PHYSICAL_REPOSITORY_ID = "physical_repository_id";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_CONTAINER_NAME = "container_name";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_CONTAINERDYNAMICSEPARATION_OPEN_ID = "open_id";
        public static readonly string COLUMN_PHYSICALREPOSITORY_PHYSICAL_REPOSITORY_ID = "physical_repository_id";
        public static readonly string COLUMN_PHYSICALREPOSITORY_REPOSITORY_GROUP_ID = "repository_group_id";
        public static readonly string COLUMN_PHYSICALREPOSITORY_CONNECTION_STRING = "connection_string";
        public static readonly string COLUMN_REPOSITORYGROUP_REPOSITORY_GROUP_ID = "repository_group_id";
        public static readonly string COLUMN_REPOSITORYGROUP_REPOSITORY_GROUP_NAME = "repository_group_name";
        public static readonly string COLUMN_REPOSITORYGROUP_REPOSITORY_TYPE_CD = "repository_type_cd";
        public static readonly string COLUMN_VENDOROCCUPANCYCONTAINERSIZE_VENDOR_CONTAINER_ID = "vendor_container_id";
        public static readonly string COLUMN_VENDOROCCUPANCYCONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_VENDOROCCUPANCYCONTAINERSIZE_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDOROCCUPANCYCONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_APIINFO_API_ID = "api_id";
        public static readonly string COLUMN_APIINFO_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_APIINFO_API_DESCRIPTION = "api_description";
        public static readonly string COLUMN_APIINFO_API_URL = "api_url";
        public static readonly string COLUMN_APIINFO_REPOSITORY_GROUP_ID = "repository_group_id";
        public static readonly string COLUMN_CONTROLLERINFO_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_CONTROLLERINFO_CONTROLLER_URL = "controller_url";
        public static readonly string COLUMN_CONTROLLERINFO_CONTROLLER_DESCRIPTION = "controller_description";
        public static readonly string COLUMN_CONTROLLERINFO_PROVIDER_VENDORID = "provider_vendorid";
        public static readonly string COLUMN_CONTROLLERINFO_PROVIDER_SYSTEMID = "provider_systemid";
        public static readonly string COLUMN_CONTROLLERINFO_CONTROLLER_NAME = "controller_name";
        public static readonly string COLUMN_CONTROLLERINFO_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_CONTROLLERINFO_IS_PERSON = "is_person";
        public static readonly string COLUMN_CONTROLLERINFO_IS_VENDOR = "is_vendor";
        public static readonly string COLUMN_CONTROLLERINFO_IS_CONTAINER_DYNAMIC_SEPARATION = "is_container_dynamic_separation";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_DASHBOARD_DATA_REPOSITORY_SETTING_ID = "dashboard_data_repository_setting_id";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_DASHBOARD_DATA_REPOSITORY_TYPE = "dashboard_data_repository_type";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_USE_DATA_SETTING = "use_data_setting";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_OFFER_DATA_SETTING = "offer_data_setting";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_ADMIN_DATA_SETTING = "admin_data_setting";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_REG_DATE = "reg_date";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTING_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_DASHBOARD_DATA_REPOSITORY_SETTING_SCHEMA_ID = "dashboard_data_repository_setting_schema_id";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_DASHBOARD_DATA_REPOSITORY_SETTING_ID = "dashboard_data_repository_setting_id";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_DATABASE_TYPE = "database_type";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_SQL = "sql";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_USE_CACHE = "use_cache";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_CACHE_EXPIRE_TIME = "cache_expire_time";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_ORDER_DATA = "order_data";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_REG_DATE = "reg_date";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DASHBOARDDATAREPOSITORYSETTINGSCHEMA_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DASHBOARDSETTING_DASHBOARD_SETTING_ID = "dashboard_setting_id";
        public static readonly string COLUMN_DASHBOARDSETTING_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_DASHBOARDSETTING_DISPLAY_NAME = "display_name";
        public static readonly string COLUMN_DASHBOARDSETTING_DISPLAY_ORDER = "display_order";
        public static readonly string COLUMN_DASHBOARDSETTING_REG_DATE = "reg_date";
        public static readonly string COLUMN_DASHBOARDSETTING_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DASHBOARDSETTING_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DASHBOARDSETTING_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DASHBOARDSETTING_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_DASHBOARD_SETTING_ITEM_ID = "dashboard_setting_item_id";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_DASHBOARD_SETTING_ID = "dashboard_setting_id";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_ORDER_X = "order_x";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_ORDER_Y = "order_y";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_WIDTH = "width";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_HEIGHT = "height";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_REG_DATE = "reg_date";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DASHBOARDSETTINGITEM_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_DASHBOARD_SETTING_ITEM_VIEW_ID = "dashboard_setting_item_view_id";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_DASHBOARD_SETTING_ITEM_ID = "dashboard_setting_item_id";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_VIEW_DEFINITION = "view_definition";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_REG_DATE = "reg_date";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_UPD_DATE = "upd_date";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_DASHBOARDSETTINGITEMVIEW_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_LOGGING_LOG_ID = "log_id";
        public static readonly string COLUMN_LOGGING_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_LOGGING_API_ID = "api_id";
        public static readonly string COLUMN_LOGGING_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_LOGGING_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_LOGGING_HTTPSTATUS_CODE = "httpstatus_code";
        public static readonly string COLUMN_LOGGING_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_LOGGING_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_LOGGING_OPEN_ID = "open_id";
        public static readonly string COLUMN_LOGGING_PROVIDER_VENDORID = "provider_vendorid";
        public static readonly string COLUMN_LOGGING_PROVIDER_SYSTEMID = "provider_systemid";
        public static readonly string COLUMN_LOGGING_CLIENT_IPADDRESS = "client_ipaddress";
        public static readonly string COLUMN_LOGGING_CONTROLLER_NAME = "controller_name";
        public static readonly string COLUMN_LOGGING_ACTION_NAME = "action_name";
        public static readonly string COLUMN_LOGGING_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_LOGGING_URL = "url";
        public static readonly string COLUMN_LOGGING_QUERYSTRING = "querystring";
        public static readonly string COLUMN_LOGGING_REQUEST_HEADERS = "request_headers";
        public static readonly string COLUMN_LOGGING_REQUEST_CONTENTTYPE = "request_contenttype";
        public static readonly string COLUMN_LOGGING_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_LOGGING_REQUESTBODY = "requestbody";
        public static readonly string COLUMN_LOGGING_RESPONSE_HEADERS = "response_headers";
        public static readonly string COLUMN_LOGGING_RESPONSE_CONTENTTYPE = "response_contenttype";
        public static readonly string COLUMN_LOGGING_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_LOGGING_RESPONSE_BODY = "response_body";
        public static readonly string COLUMN_LOGGING_REQUEST_DATE_YMD = "request_date_ymd";
        public static readonly string COLUMN_LOGGING_REQUEST_DATE_YMDH = "request_date_ymdh";
        public static readonly string COLUMN_LOGGING_REQUEST_DATE_YMDHM = "request_date_ymdhm";
        public static readonly string COLUMN_LOGGING_REG_DATE = "reg_date";
        public static readonly string COLUMN_LOGGING_IS_INTERNAL_CALL = "is_internal_call";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_PROVIDER_VENDORID = "provider_vendorid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_PROVIDER_SYSTEMID = "provider_systemid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_API_ID = "api_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_URL = "url";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_SUCCESSES = "successes";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_FAILURE = "failure";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_REG_DATE = "reg_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMD_RUNNING = "running";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_PROVIDER_VENDORID = "provider_vendorid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_PROVIDER_SYSTEMID = "provider_systemid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_API_ID = "api_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_URL = "url";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_SUCCESSES = "successes";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_FAILURE = "failure";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_REG_DATE = "reg_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDH_RUNNING = "running";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_PROVIDER_VENDORID = "provider_vendorid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_PROVIDER_SYSTEMID = "provider_systemid";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_API_ID = "api_id";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_URL = "url";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_SUCCESSES = "successes";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_FAILURE = "failure";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_REG_DATE = "reg_date";
        public static readonly string COLUMN_PROVIDERVENDORSYSTEMSUMMARYYMDHM_RUNNING = "running";
        public static readonly string COLUMN_CONTAINERSIZE_CONTAINER_SIZE_ID = "container_size_id";
        public static readonly string COLUMN_CONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_CONTAINERSIZE_PHYSICAL_REPOSITORY_ID = "physical_repository_id";
        public static readonly string COLUMN_CONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_SYSTEM_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEM_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_SYSTEM_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_SYSTEM_REPRESENTATIVE_MAIL_ADDRESS = "representative_mail_address";
        public static readonly string COLUMN_SYSTEM_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_PERSONOCCUPANCYCONTAINERSIZE_PERSON_CONTAINER_ID = "person_container_id";
        public static readonly string COLUMN_PERSONOCCUPANCYCONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_PERSONOCCUPANCYCONTAINERSIZE_OPEN_ID = "open_id";
        public static readonly string COLUMN_PERSONOCCUPANCYCONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_NOTIFICATION_DEFINITION_ID = "notification_definition_id";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_NOTIFICATION_TYPE_CODE = "notification_type_code";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_TOTALIZATION_TYPE_CODE = "totalization_type_code";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_REPORTING_CYCLE_CODE = "reporting_cycle_code";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_NOTIFICATION_MAIL_TEMPLATE_ID = "notification_mail_template_id";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_REG_DATE = "reg_date";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_UPD_DATE = "upd_date";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_NOTIFICATIONDEFINITION_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDOR_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDOR_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDOR_REPRESENTATIVE_MAIL_ADDRESS = "representative_mail_address";
        public static readonly string COLUMN_VENDOR_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_NOTIFICATIONEVENT_NOTIFICATION_EVENT_ID = "notification_event_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_NOTIFICATION_DEFINITION_ID = "notification_definition_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_NOTIFICATION_TYPE_CODE = "notification_type_code";
        public static readonly string COLUMN_NOTIFICATIONEVENT_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_TOTALIZATION_TYPE_CODE = "totalization_type_code";
        public static readonly string COLUMN_NOTIFICATIONEVENT_REPORTING_CYCLE_CODE = "reporting_cycle_code";
        public static readonly string COLUMN_NOTIFICATIONEVENT_NOTIFICATION_MAIL_TEMPLATE_ID = "notification_mail_template_id";
        public static readonly string COLUMN_NOTIFICATIONEVENT_TARGET_DATE = "target_date";
        public static readonly string COLUMN_NOTIFICATIONEVENT_REG_DATE = "reg_date";
        public static readonly string COLUMN_NOTIFICATIONEVENT_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_NOTIFICATIONEVENT_UPD_DATE = "upd_date";
        public static readonly string COLUMN_NOTIFICATIONEVENT_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_NOTIFICATIONEVENT_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_API_ID = "api_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_URL = "url";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_SUCCESSES = "successes";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_FAILURE = "failure";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMD_RUNNING = "running";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_API_ID = "api_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_URL = "url";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_SUCCESSES = "successes";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_FAILURE = "failure";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDH_RUNNING = "running";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_NOTIFICATION_MAIL_TEMPLATE_ID = "notification_mail_template_id";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_NOTIFICATION_MAIL_TEMPLATE_NAME = "notification_mail_template_name";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_FROM = "mail_from";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_TO = "mail_to";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_CC = "cc";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_BCC = "bcc";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_SUBJECT = "subject";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_BODY = "body";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_REG_DATE = "reg_date";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_NOTIFICATIONMAILTEMPLATE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_SUMMARYID = "summary_Id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_API_ID = "api_id";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_REQUEST_DATE = "request_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_URL = "url";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_HTTPMETHODTYPE = "httpmethodtype";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_VENDOR_NAME = "vendor_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_SYSTEM_NAME = "system_name";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_EXECUTE_TIME = "execute_time";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_EXECUTE_COUNT = "execute_count";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_SUCCESSES = "successes";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_FAILURE = "failure";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_REQUEST_CONTENTLENGTH = "request_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_RESPONSE_CONTENTLENGTH = "response_contentlength";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_REG_DATE = "reg_date";
        public static readonly string COLUMN_VENDORSYSTEMSUMMARYYMDHM_RUNNING = "running";
        public static readonly string COLUMN_NOTIFICATIONTYPE_NOTIFICATION_TYPE_CODE = "notification_type_code";
        public static readonly string COLUMN_NOTIFICATIONTYPE_NOTIFICATION_TYPE_NAME = "notification_type_name";
        public static readonly string COLUMN_NOTIFICATIONTYPE_REG_DATE = "reg_date";
        public static readonly string COLUMN_NOTIFICATIONTYPE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_NOTIFICATIONTYPE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_NOTIFICATIONTYPE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_NOTIFICATIONTYPE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_REPORTINGCYCLE_REPORTING_CYCLE_CODE = "reporting_cycle_code";
        public static readonly string COLUMN_REPORTINGCYCLE_REPORTING_TYPE_NAME = "reporting_type_name";
        public static readonly string COLUMN_REPORTINGCYCLE_REG_DATE = "reg_date";
        public static readonly string COLUMN_REPORTINGCYCLE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_REPORTINGCYCLE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_REPORTINGCYCLE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_REPORTINGCYCLE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_RESOURCEOCCUPANCYCONTAINERSIZE_RESOURCE_CONTAINER_ID = "resource_container_id";
        public static readonly string COLUMN_RESOURCEOCCUPANCYCONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_RESOURCEOCCUPANCYCONTAINERSIZE_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_RESOURCEOCCUPANCYCONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_SHAREDCONTAINERSIZE_SHARED_CONTAINER_ID = "shared_container_id";
        public static readonly string COLUMN_SHAREDCONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_SHAREDCONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_SYSTEMOCCUPANCYCONTAINERSIZE_SYSTEM_CONTAINER_ID = "system_container_id";
        public static readonly string COLUMN_SYSTEMOCCUPANCYCONTAINERSIZE_INVESTIGATION_DATE = "investigation_date";
        public static readonly string COLUMN_SYSTEMOCCUPANCYCONTAINERSIZE_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_SYSTEMOCCUPANCYCONTAINERSIZE_SIZE_BYTE = "size_byte";
        public static readonly string COLUMN_SYSTEMOCCUPANCYCONTAINERSIZE_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_TOTALIZATIONTYPE_TOTALIZATION_TYPE_CODE = "totalization_type_code";
        public static readonly string COLUMN_TOTALIZATIONTYPE_TOTALIZATION_TYPE_NAME = "totalization_type_name";
        public static readonly string COLUMN_TOTALIZATIONTYPE_REG_DATE = "reg_date";
        public static readonly string COLUMN_TOTALIZATIONTYPE_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_TOTALIZATIONTYPE_UPD_DATE = "upd_date";
        public static readonly string COLUMN_TOTALIZATIONTYPE_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_TOTALIZATIONTYPE_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_NOTIFICATION_MAIL_HISTORY_ID = "notification_mail_history_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_REPORTING_CYCLE_CODE = "reporting_cycle_code";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_TOTALIZATION_TYPE_CODE = "totalization_type_code";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_NOTIFICATION_DATE = "notification_date";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_NOTIFICATION_DEFINITION_ID = "notification_definition_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_NOTIFICATION_EVENT_ID = "notification_event_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_NOTIFICATION_MAIL_TEMPLATE_ID = "notification_mail_template_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_CONTROLLER_ID = "controller_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_VENDOR_ID = "vendor_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_SYSTEM_ID = "system_id";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_FROM = "mail_from";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_TO = "mail_to";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_CC = "cc";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_BCC = "bcc";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_SUBJECT = "subject";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_BODY = "body";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_TEMPFILE_PATH = "tempfile_path";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_MAIL_TYPE_CODE = "mail_type_code";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_REG_DATE = "reg_date";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_REG_USERNAME = "reg_username";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_UPD_DATE = "upd_date";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_UPD_USERNAME = "upd_username";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORY_IS_ACTIVE = "is_active";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORYQUEUE_PAYLOAD = "payload";
        public static readonly string COLUMN_NOTIFICATIONMAILHISTORYQUEUE_DEQUEUE_COUNT = "dequeue_count";
        public static readonly string COLUMN_NOTIFICATIONEVENTQUEUE_PAYLOAD = "payload";
        public static readonly string COLUMN_NOTIFICATIONEVENTQUEUE_DEQUEUE_COUNT = "dequeue_count";
    }

    public enum Tables
    {
        ContainerDynamicSeparation,
        PhysicalRepository,
        RepositoryGroup,
        VendorOccupancyContainerSize,
        ApiInfo,
        ControllerInfo,
        DashboardDataRepositorySetting,
        DashboardDataRepositorySettingSchema,
        DashboardSetting,
        DashboardSettingItem,
        DashboardSettingItemView,
        Logging,
        ProViderVendorSystemSummaryYmd,
        ProViderVendorSystemSummaryYmdH,
        ProViderVendorSystemSummaryYmdHm,
        ContainerSize,
        System,
        PersonOccupancyContainerSize,
        NotificationDefinition,
        Vendor,
        NotificationEvent,
        VendorSystemSummaryYmd,
        VendorSystemSummaryYmdH,
        NotificationMailTemplate,
        VendorSystemSummaryYmdHm,
        NotificationType,
        ReportingCycle,
        ResourceOccupancyContainerSize,
        SharedContainerSize,
        SystemOccupancyContainerSize,
        TotalizationType,
        NotificationMailHistory,
        NotificationMailHistoryQueue,
        NotificationEventQueue,
    }

    public enum LoggingContainerDynamicSeparation
    {
        [DbMap("Logging","Container_Dynamic_Separation","container_dynamic_separation_id")]
        container_dynamic_separation_id,
        [DbMap("Logging","Container_Dynamic_Separation","physical_repository_id")]
        physical_repository_id,
        [DbMap("Logging","Container_Dynamic_Separation","controller_id")]
        controller_id,
        [DbMap("Logging","Container_Dynamic_Separation","vendor_id")]
        vendor_id,
        [DbMap("Logging","Container_Dynamic_Separation","system_id")]
        system_id,
        [DbMap("Logging","Container_Dynamic_Separation","container_name")]
        container_name,
        [DbMap("Logging","Container_Dynamic_Separation","is_active")]
        is_active,
        [DbMap("Logging","Container_Dynamic_Separation","open_id")]
        open_id,
    }
    public enum LoggingPhysicalRepository
    {
        [DbMap("Logging","Physical_Repository","physical_repository_id")]
        physical_repository_id,
        [DbMap("Logging","Physical_Repository","repository_group_id")]
        repository_group_id,
        [DbMap("Logging","Physical_Repository","connection_string")]
        connection_string,
    }
    public enum LoggingRepositoryGroup
    {
        [DbMap("Logging","Repository_Group","repository_group_id")]
        repository_group_id,
        [DbMap("Logging","Repository_Group","repository_group_name")]
        repository_group_name,
        [DbMap("Logging","Repository_Group","repository_type_cd")]
        repository_type_cd,
    }
    public enum LoggingVendorOccupancyContainerSize
    {
        [DbMap("Logging","Vendor_Occupancy_Container_Size","vendor_container_id")]
        vendor_container_id,
        [DbMap("Logging","Vendor_Occupancy_Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","Vendor_Occupancy_Container_Size","vendor_id")]
        vendor_id,
        [DbMap("Logging","Vendor_Occupancy_Container_Size","size_byte")]
        size_byte,
    }
    public enum LoggingApiInfo
    {
        [DbMap("Logging","Api_Info","api_id")]
        api_id,
        [DbMap("Logging","Api_Info","controller_id")]
        controller_id,
        [DbMap("Logging","Api_Info","api_description")]
        api_description,
        [DbMap("Logging","Api_Info","api_url")]
        api_url,
        [DbMap("Logging","Api_Info","repository_group_id")]
        repository_group_id,
    }
    public enum LoggingControllerInfo
    {
        [DbMap("Logging","Controller_Info","controller_id")]
        controller_id,
        [DbMap("Logging","Controller_Info","controller_url")]
        controller_url,
        [DbMap("Logging","Controller_Info","controller_description")]
        controller_description,
        [DbMap("Logging","Controller_Info","provider_vendorid")]
        provider_vendorid,
        [DbMap("Logging","Controller_Info","provider_systemid")]
        provider_systemid,
        [DbMap("Logging","Controller_Info","controller_name")]
        controller_name,
        [DbMap("Logging","Controller_Info","is_active")]
        is_active,
        [DbMap("Logging","Controller_Info","is_person")]
        is_person,
        [DbMap("Logging","Controller_Info","is_vendor")]
        is_vendor,
        [DbMap("Logging","Controller_Info","is_container_dynamic_separation")]
        is_container_dynamic_separation,
    }
    public enum LoggingDashboardDataRepositorySetting
    {
        [DbMap("Logging","Dashboard_Data_Repository_Setting","dashboard_data_repository_setting_id")]
        dashboard_data_repository_setting_id,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","dashboard_data_repository_type")]
        dashboard_data_repository_type,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","use_data_setting")]
        use_data_setting,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","offer_data_setting")]
        offer_data_setting,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","admin_data_setting")]
        admin_data_setting,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","reg_date")]
        reg_date,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","reg_username")]
        reg_username,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","upd_date")]
        upd_date,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","upd_username")]
        upd_username,
        [DbMap("Logging","Dashboard_Data_Repository_Setting","is_active")]
        is_active,
    }
    public enum LoggingDashboardDataRepositorySettingSchema
    {
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","dashboard_data_repository_setting_schema_id")]
        dashboard_data_repository_setting_schema_id,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","dashboard_data_repository_setting_id")]
        dashboard_data_repository_setting_id,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","database_type")]
        database_type,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","sql")]
        sql,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","use_cache")]
        use_cache,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","cache_expire_time")]
        cache_expire_time,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","order_data")]
        order_data,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","reg_date")]
        reg_date,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","reg_username")]
        reg_username,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","upd_date")]
        upd_date,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","upd_username")]
        upd_username,
        [DbMap("Logging","Dashboard_Data_Repository_Setting_Schema","is_active")]
        is_active,
    }
    public enum LoggingDashboardSetting
    {
        [DbMap("Logging","Dashboard_Setting","dashboard_setting_id")]
        dashboard_setting_id,
        [DbMap("Logging","Dashboard_Setting","vendor_id")]
        vendor_id,
        [DbMap("Logging","Dashboard_Setting","display_name")]
        display_name,
        [DbMap("Logging","Dashboard_Setting","display_order")]
        display_order,
        [DbMap("Logging","Dashboard_Setting","reg_date")]
        reg_date,
        [DbMap("Logging","Dashboard_Setting","reg_username")]
        reg_username,
        [DbMap("Logging","Dashboard_Setting","upd_date")]
        upd_date,
        [DbMap("Logging","Dashboard_Setting","upd_username")]
        upd_username,
        [DbMap("Logging","Dashboard_Setting","is_active")]
        is_active,
    }
    public enum LoggingDashboardSettingItem
    {
        [DbMap("Logging","Dashboard_Setting_Item","dashboard_setting_item_id")]
        dashboard_setting_item_id,
        [DbMap("Logging","Dashboard_Setting_Item","dashboard_setting_id")]
        dashboard_setting_id,
        [DbMap("Logging","Dashboard_Setting_Item","order_x")]
        order_x,
        [DbMap("Logging","Dashboard_Setting_Item","order_y")]
        order_y,
        [DbMap("Logging","Dashboard_Setting_Item","width")]
        width,
        [DbMap("Logging","Dashboard_Setting_Item","height")]
        height,
        [DbMap("Logging","Dashboard_Setting_Item","reg_date")]
        reg_date,
        [DbMap("Logging","Dashboard_Setting_Item","reg_username")]
        reg_username,
        [DbMap("Logging","Dashboard_Setting_Item","upd_date")]
        upd_date,
        [DbMap("Logging","Dashboard_Setting_Item","upd_username")]
        upd_username,
        [DbMap("Logging","Dashboard_Setting_Item","is_active")]
        is_active,
    }
    public enum LoggingDashboardSettingItemView
    {
        [DbMap("Logging","Dashboard_Setting_Item_View","dashboard_setting_item_view_id")]
        dashboard_setting_item_view_id,
        [DbMap("Logging","Dashboard_Setting_Item_View","dashboard_setting_item_id")]
        dashboard_setting_item_id,
        [DbMap("Logging","Dashboard_Setting_Item_View","view_definition")]
        view_definition,
        [DbMap("Logging","Dashboard_Setting_Item_View","reg_date")]
        reg_date,
        [DbMap("Logging","Dashboard_Setting_Item_View","reg_username")]
        reg_username,
        [DbMap("Logging","Dashboard_Setting_Item_View","upd_date")]
        upd_date,
        [DbMap("Logging","Dashboard_Setting_Item_View","upd_username")]
        upd_username,
        [DbMap("Logging","Dashboard_Setting_Item_View","is_active")]
        is_active,
    }
    public enum LoggingLogging
    {
        [DbMap("Logging","Logging","log_id")]
        log_id,
        [DbMap("Logging","Logging","controller_id")]
        controller_id,
        [DbMap("Logging","Logging","api_id")]
        api_id,
        [DbMap("Logging","Logging","request_date")]
        request_date,
        [DbMap("Logging","Logging","execute_time")]
        execute_time,
        [DbMap("Logging","Logging","httpstatus_code")]
        httpstatus_code,
        [DbMap("Logging","Logging","vendor_id")]
        vendor_id,
        [DbMap("Logging","Logging","system_id")]
        system_id,
        [DbMap("Logging","Logging","open_id")]
        open_id,
        [DbMap("Logging","Logging","provider_vendorid")]
        provider_vendorid,
        [DbMap("Logging","Logging","provider_systemid")]
        provider_systemid,
        [DbMap("Logging","Logging","client_ipaddress")]
        client_ipaddress,
        [DbMap("Logging","Logging","controller_name")]
        controller_name,
        [DbMap("Logging","Logging","action_name")]
        action_name,
        [DbMap("Logging","Logging","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Logging","url")]
        url,
        [DbMap("Logging","Logging","querystring")]
        querystring,
        [DbMap("Logging","Logging","request_headers")]
        request_headers,
        [DbMap("Logging","Logging","request_contenttype")]
        request_contenttype,
        [DbMap("Logging","Logging","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Logging","requestbody")]
        requestbody,
        [DbMap("Logging","Logging","response_headers")]
        response_headers,
        [DbMap("Logging","Logging","response_contenttype")]
        response_contenttype,
        [DbMap("Logging","Logging","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Logging","response_body")]
        response_body,
        [DbMap("Logging","Logging","request_date_ymd")]
        request_date_ymd,
        [DbMap("Logging","Logging","request_date_ymdh")]
        request_date_ymdh,
        [DbMap("Logging","Logging","request_date_ymdhm")]
        request_date_ymdhm,
        [DbMap("Logging","Logging","reg_date")]
        reg_date,
        [DbMap("Logging","Logging","is_internal_call")]
        is_internal_call,
    }
    public enum LoggingProViderVendorSystemSummaryYmd
    {
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","summary_Id")]
        summaryId,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","provider_vendorid")]
        provider_vendorid,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","provider_systemid")]
        provider_systemid,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","controller_id")]
        controller_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","api_id")]
        api_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","request_date")]
        request_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","url")]
        url,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","vendor_name")]
        vendor_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","system_name")]
        system_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","execute_time")]
        execute_time,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","execute_count")]
        execute_count,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","successes")]
        successes,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","failure")]
        failure,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","reg_date")]
        reg_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_Ymd","running")]
        running,
    }
    public enum LoggingProViderVendorSystemSummaryYmdH
    {
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","summary_Id")]
        summaryId,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","provider_vendorid")]
        provider_vendorid,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","provider_systemid")]
        provider_systemid,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","controller_id")]
        controller_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","api_id")]
        api_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","request_date")]
        request_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","url")]
        url,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","vendor_name")]
        vendor_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","system_name")]
        system_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","execute_time")]
        execute_time,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","execute_count")]
        execute_count,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","successes")]
        successes,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","failure")]
        failure,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","reg_date")]
        reg_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdH","running")]
        running,
    }
    public enum LoggingProViderVendorSystemSummaryYmdHm
    {
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","summary_Id")]
        summaryId,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","provider_vendorid")]
        provider_vendorid,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","provider_systemid")]
        provider_systemid,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","controller_id")]
        controller_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","api_id")]
        api_id,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","request_date")]
        request_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","url")]
        url,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","vendor_name")]
        vendor_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","system_name")]
        system_name,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","execute_time")]
        execute_time,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","execute_count")]
        execute_count,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","successes")]
        successes,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","failure")]
        failure,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","reg_date")]
        reg_date,
        [DbMap("Logging","Provider_Vendor_System_Summary_YmdHm","running")]
        running,
    }
    public enum LoggingContainerSize
    {
        [DbMap("Logging","Container_Size","container_size_id")]
        container_size_id,
        [DbMap("Logging","Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","Container_Size","physical_repository_id")]
        physical_repository_id,
        [DbMap("Logging","Container_Size","size_byte")]
        size_byte,
    }
    public enum LoggingSystem
    {
        [DbMap("Logging","System","system_id")]
        system_id,
        [DbMap("Logging","System","vendor_id")]
        vendor_id,
        [DbMap("Logging","System","system_name")]
        system_name,
        [DbMap("Logging","System","representative_mail_address")]
        representative_mail_address,
        [DbMap("Logging","System","is_active")]
        is_active,
    }
    public enum LoggingPersonOccupancyContainerSize
    {
        [DbMap("Logging","Person_Occupancy_Container_Size","person_container_id")]
        person_container_id,
        [DbMap("Logging","Person_Occupancy_Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","Person_Occupancy_Container_Size","open_id")]
        open_id,
        [DbMap("Logging","Person_Occupancy_Container_Size","size_byte")]
        size_byte,
    }
    public enum LoggingNotificationDefinition
    {
        [DbMap("Logging","Notification_Definition","notification_definition_id")]
        notification_definition_id,
        [DbMap("Logging","Notification_Definition","notification_type_code")]
        notification_type_code,
        [DbMap("Logging","Notification_Definition","controller_id")]
        controller_id,
        [DbMap("Logging","Notification_Definition","vendor_id")]
        vendor_id,
        [DbMap("Logging","Notification_Definition","system_id")]
        system_id,
        [DbMap("Logging","Notification_Definition","totalization_type_code")]
        totalization_type_code,
        [DbMap("Logging","Notification_Definition","reporting_cycle_code")]
        reporting_cycle_code,
        [DbMap("Logging","Notification_Definition","notification_mail_template_id")]
        notification_mail_template_id,
        [DbMap("Logging","Notification_Definition","reg_date")]
        reg_date,
        [DbMap("Logging","Notification_Definition","reg_username")]
        reg_username,
        [DbMap("Logging","Notification_Definition","upd_date")]
        upd_date,
        [DbMap("Logging","Notification_Definition","upd_username")]
        upd_username,
        [DbMap("Logging","Notification_Definition","is_active")]
        is_active,
    }
    public enum LoggingVendor
    {
        [DbMap("Logging","Vendor","vendor_id")]
        vendor_id,
        [DbMap("Logging","Vendor","vendor_name")]
        vendor_name,
        [DbMap("Logging","Vendor","representative_mail_address")]
        representative_mail_address,
        [DbMap("Logging","Vendor","is_active")]
        is_active,
    }
    public enum LoggingNotificationEvent
    {
        [DbMap("Logging","Notification_Event","notification_event_id")]
        notification_event_id,
        [DbMap("Logging","Notification_Event","notification_definition_id")]
        notification_definition_id,
        [DbMap("Logging","Notification_Event","notification_type_code")]
        notification_type_code,
        [DbMap("Logging","Notification_Event","controller_id")]
        controller_id,
        [DbMap("Logging","Notification_Event","vendor_id")]
        vendor_id,
        [DbMap("Logging","Notification_Event","system_id")]
        system_id,
        [DbMap("Logging","Notification_Event","totalization_type_code")]
        totalization_type_code,
        [DbMap("Logging","Notification_Event","reporting_cycle_code")]
        reporting_cycle_code,
        [DbMap("Logging","Notification_Event","notification_mail_template_id")]
        notification_mail_template_id,
        [DbMap("Logging","Notification_Event","target_date")]
        target_date,
        [DbMap("Logging","Notification_Event","reg_date")]
        reg_date,
        [DbMap("Logging","Notification_Event","reg_username")]
        reg_username,
        [DbMap("Logging","Notification_Event","upd_date")]
        upd_date,
        [DbMap("Logging","Notification_Event","upd_username")]
        upd_username,
        [DbMap("Logging","Notification_Event","is_active")]
        is_active,
    }
    public enum LoggingVendorSystemSummaryYmd
    {
        [DbMap("Logging","Vendor_System_Summary_Ymd","summary_Id")]
        summaryId,
        [DbMap("Logging","Vendor_System_Summary_Ymd","vendor_id")]
        vendor_id,
        [DbMap("Logging","Vendor_System_Summary_Ymd","system_id")]
        system_id,
        [DbMap("Logging","Vendor_System_Summary_Ymd","controller_id")]
        controller_id,
        [DbMap("Logging","Vendor_System_Summary_Ymd","api_id")]
        api_id,
        [DbMap("Logging","Vendor_System_Summary_Ymd","request_date")]
        request_date,
        [DbMap("Logging","Vendor_System_Summary_Ymd","url")]
        url,
        [DbMap("Logging","Vendor_System_Summary_Ymd","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Vendor_System_Summary_Ymd","vendor_name")]
        vendor_name,
        [DbMap("Logging","Vendor_System_Summary_Ymd","system_name")]
        system_name,
        [DbMap("Logging","Vendor_System_Summary_Ymd","execute_time")]
        execute_time,
        [DbMap("Logging","Vendor_System_Summary_Ymd","execute_count")]
        execute_count,
        [DbMap("Logging","Vendor_System_Summary_Ymd","successes")]
        successes,
        [DbMap("Logging","Vendor_System_Summary_Ymd","failure")]
        failure,
        [DbMap("Logging","Vendor_System_Summary_Ymd","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Vendor_System_Summary_Ymd","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Vendor_System_Summary_Ymd","reg_date")]
        reg_date,
        [DbMap("Logging","Vendor_System_Summary_Ymd","running")]
        running,
    }
    public enum LoggingVendorSystemSummaryYmdH
    {
        [DbMap("Logging","Vendor_System_Summary_YmdH","summary_Id")]
        summaryId,
        [DbMap("Logging","Vendor_System_Summary_YmdH","vendor_id")]
        vendor_id,
        [DbMap("Logging","Vendor_System_Summary_YmdH","system_id")]
        system_id,
        [DbMap("Logging","Vendor_System_Summary_YmdH","controller_id")]
        controller_id,
        [DbMap("Logging","Vendor_System_Summary_YmdH","api_id")]
        api_id,
        [DbMap("Logging","Vendor_System_Summary_YmdH","request_date")]
        request_date,
        [DbMap("Logging","Vendor_System_Summary_YmdH","url")]
        url,
        [DbMap("Logging","Vendor_System_Summary_YmdH","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Vendor_System_Summary_YmdH","vendor_name")]
        vendor_name,
        [DbMap("Logging","Vendor_System_Summary_YmdH","system_name")]
        system_name,
        [DbMap("Logging","Vendor_System_Summary_YmdH","execute_time")]
        execute_time,
        [DbMap("Logging","Vendor_System_Summary_YmdH","execute_count")]
        execute_count,
        [DbMap("Logging","Vendor_System_Summary_YmdH","successes")]
        successes,
        [DbMap("Logging","Vendor_System_Summary_YmdH","failure")]
        failure,
        [DbMap("Logging","Vendor_System_Summary_YmdH","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Vendor_System_Summary_YmdH","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Vendor_System_Summary_YmdH","reg_date")]
        reg_date,
        [DbMap("Logging","Vendor_System_Summary_YmdH","running")]
        running,
    }
    public enum LoggingNotificationMailTemplate
    {
        [DbMap("Logging","Notification_Mail_Template","notification_mail_template_id")]
        notification_mail_template_id,
        [DbMap("Logging","Notification_Mail_Template","notification_mail_template_name")]
        notification_mail_template_name,
        [DbMap("Logging","Notification_Mail_Template","mail_from")]
        from,
        [DbMap("Logging","Notification_Mail_Template","mail_to")]
        to,
        [DbMap("Logging","Notification_Mail_Template","cc")]
        cc,
        [DbMap("Logging","Notification_Mail_Template","bcc")]
        bcc,
        [DbMap("Logging","Notification_Mail_Template","subject")]
        subject,
        [DbMap("Logging","Notification_Mail_Template","body")]
        body,
        [DbMap("Logging","Notification_Mail_Template","reg_date")]
        reg_date,
        [DbMap("Logging","Notification_Mail_Template","reg_username")]
        reg_username,
        [DbMap("Logging","Notification_Mail_Template","upd_date")]
        upd_date,
        [DbMap("Logging","Notification_Mail_Template","upd_username")]
        upd_username,
        [DbMap("Logging","Notification_Mail_Template","is_active")]
        is_active,
    }
    public enum LoggingVendorSystemSummaryYmdHm
    {
        [DbMap("Logging","Vendor_System_Summary_YmdHm","summary_Id")]
        summaryId,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","vendor_id")]
        vendor_id,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","system_id")]
        system_id,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","controller_id")]
        controller_id,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","api_id")]
        api_id,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","request_date")]
        request_date,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","url")]
        url,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","httpmethodtype")]
        httpmethodtype,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","vendor_name")]
        vendor_name,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","system_name")]
        system_name,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","execute_time")]
        execute_time,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","execute_count")]
        execute_count,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","successes")]
        successes,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","failure")]
        failure,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","request_contentlength")]
        request_contentlength,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","response_contentlength")]
        response_contentlength,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","reg_date")]
        reg_date,
        [DbMap("Logging","Vendor_System_Summary_YmdHm","running")]
        running,
    }
    public enum LoggingNotificationType
    {
        [DbMap("Logging","Notification_Type","notification_type_code")]
        notification_type_code,
        [DbMap("Logging","Notification_Type","notification_type_name")]
        notification_type_name,
        [DbMap("Logging","Notification_Type","reg_date")]
        reg_date,
        [DbMap("Logging","Notification_Type","reg_username")]
        reg_username,
        [DbMap("Logging","Notification_Type","upd_date")]
        upd_date,
        [DbMap("Logging","Notification_Type","upd_username")]
        upd_username,
        [DbMap("Logging","Notification_Type","is_active")]
        is_active,
    }
    public enum LoggingReportingCycle
    {
        [DbMap("Logging","Reporting_Cycle","reporting_cycle_code")]
        reporting_cycle_code,
        [DbMap("Logging","Reporting_Cycle","reporting_type_name")]
        reporting_type_name,
        [DbMap("Logging","Reporting_Cycle","reg_date")]
        reg_date,
        [DbMap("Logging","Reporting_Cycle","reg_username")]
        reg_username,
        [DbMap("Logging","Reporting_Cycle","upd_date")]
        upd_date,
        [DbMap("Logging","Reporting_Cycle","upd_username")]
        upd_username,
        [DbMap("Logging","Reporting_Cycle","is_active")]
        is_active,
    }
    public enum LoggingResourceOccupancyContainerSize
    {
        [DbMap("Logging","Resource_Occupancy_Container_Size","resource_container_id")]
        resource_container_id,
        [DbMap("Logging","Resource_Occupancy_Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","Resource_Occupancy_Container_Size","controller_id")]
        controller_id,
        [DbMap("Logging","Resource_Occupancy_Container_Size","size_byte")]
        size_byte,
    }
    public enum LoggingSharedContainerSize
    {
        [DbMap("Logging","Shared_Container_Size","shared_container_id")]
        shared_container_id,
        [DbMap("Logging","Shared_Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","Shared_Container_Size","size_byte")]
        size_byte,
    }
    public enum LoggingSystemOccupancyContainerSize
    {
        [DbMap("Logging","System_Occupancy_Container_Size","system_container_id")]
        system_container_id,
        [DbMap("Logging","System_Occupancy_Container_Size","investigation_date")]
        investigation_date,
        [DbMap("Logging","System_Occupancy_Container_Size","system_id")]
        system_id,
        [DbMap("Logging","System_Occupancy_Container_Size","size_byte")]
        size_byte,
        [DbMap("Logging","System_Occupancy_Container_Size","vendor_id")]
        vendor_id,
    }
    public enum LoggingTotalizationType
    {
        [DbMap("Logging","Totalization_Type","totalization_type_code")]
        totalization_type_code,
        [DbMap("Logging","Totalization_Type","totalization_type_name")]
        totalization_type_name,
        [DbMap("Logging","Totalization_Type","reg_date")]
        reg_date,
        [DbMap("Logging","Totalization_Type","reg_username")]
        reg_username,
        [DbMap("Logging","Totalization_Type","upd_date")]
        upd_date,
        [DbMap("Logging","Totalization_Type","upd_username")]
        upd_username,
        [DbMap("Logging","Totalization_Type","is_active")]
        is_active,
    }
    public enum LoggingNotificationMailHistory
    {
        [DbMap("Logging","Notification_Mail_History","notification_mail_history_id")]
        notification_mail_history_id,
        [DbMap("Logging","Notification_Mail_History","reporting_cycle_code")]
        reporting_cycle_code,
        [DbMap("Logging","Notification_Mail_History","totalization_type_code")]
        totalization_type_code,
        [DbMap("Logging","Notification_Mail_History","notification_date")]
        notification_date,
        [DbMap("Logging","Notification_Mail_History","notification_definition_id")]
        notification_definition_id,
        [DbMap("Logging","Notification_Mail_History","notification_event_id")]
        notification_event_id,
        [DbMap("Logging","Notification_Mail_History","notification_mail_template_id")]
        notification_mail_template_id,
        [DbMap("Logging","Notification_Mail_History","controller_id")]
        controller_id,
        [DbMap("Logging","Notification_Mail_History","vendor_id")]
        vendor_id,
        [DbMap("Logging","Notification_Mail_History","system_id")]
        system_id,
        [DbMap("Logging","Notification_Mail_History","mail_from")]
        from,
        [DbMap("Logging","Notification_Mail_History","mail_to")]
        to,
        [DbMap("Logging","Notification_Mail_History","cc")]
        cc,
        [DbMap("Logging","Notification_Mail_History","bcc")]
        bcc,
        [DbMap("Logging","Notification_Mail_History","subject")]
        subject,
        [DbMap("Logging","Notification_Mail_History","body")]
        body,
        [DbMap("Logging","Notification_Mail_History","tempfile_path")]
        tempfile_path,
        [DbMap("Logging","Notification_Mail_History","mail_type_code")]
        mail_type_code,
        [DbMap("Logging","Notification_Mail_History","reg_date")]
        reg_date,
        [DbMap("Logging","Notification_Mail_History","reg_username")]
        reg_username,
        [DbMap("Logging","Notification_Mail_History","upd_date")]
        upd_date,
        [DbMap("Logging","Notification_Mail_History","upd_username")]
        upd_username,
        [DbMap("Logging","Notification_Mail_History","is_active")]
        is_active,
    }
    public enum LoggingNotificationMailHistoryQueue
    {
        [DbMap("Logging","Notification_Mail_History_Queue","payload")]
        payload,
        [DbMap("Logging","Notification_Mail_History_Queue","dequeue_count")]
        dequeue_count,
    }
    public enum LoggingNotificationEventQueue
    {
        [DbMap("Logging","Notification_Event_Queue","payload")]
        payload,
        [DbMap("Logging","Notification_Event_Queue","dequeue_count")]
        dequeue_count,
    }


    /// <summary>
    /// A class which represents the ContainerDynamicSeparation table.
    /// </summary>
	[Table("Container_Dynamic_Separation")]
	public partial class DB_ContainerDynamicSeparation
	{
		[Key]
		public virtual Guid container_dynamic_separation_id { get; set; }
		public virtual Guid physical_repository_id { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		[MaxLength(100)]
		public virtual string container_name { get; set; }
		public virtual bool is_active { get; set; }
		public virtual Guid open_id { get; set; }
		public virtual DB_PhysicalRepository DB_PhysicalRepository { get; set; }
		public virtual DB_ControllerInfo DB_ControllerInfo { get; set; }
	}


    /// <summary>
    /// A class which represents the PhysicalRepository table.
    /// </summary>
	[Table("Physical_Repository")]
	public partial class DB_PhysicalRepository
	{
		[Key]
		public virtual Guid physical_repository_id { get; set; }
		public virtual Guid repository_group_id { get; set; }
		[MaxLength(1024)]
		public virtual string connection_string { get; set; }
		public virtual IEnumerable<DB_ContainerDynamicSeparation> ContainerDynamicSeparation { get; set; }
	}


    /// <summary>
    /// A class which represents the RepositoryGroup table.
    /// </summary>
	[Table("Repository_Group")]
	public partial class DB_RepositoryGroup
	{
		[Key]
		public virtual Guid repository_group_id { get; set; }
		[MaxLength(256)]
		public virtual string repository_group_name { get; set; }
		[MaxLength(3)]
		public virtual string repository_type_cd { get; set; }
	}


    /// <summary>
    /// A class which represents the VendorOccupancyContainerSize table.
    /// </summary>
	[Table("Vendor_Occupancy_Container_Size")]
	public partial class DB_VendorOccupancyContainerSize
	{
		public virtual Guid vendor_container_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual decimal size_byte { get; set; }
	}


    /// <summary>
    /// A class which represents the ApiInfo table.
    /// </summary>
	[Table("Api_Info")]
	public partial class DB_ApiInfo
	{
		[Key]
		public virtual Guid api_id { get; set; }
		public virtual Guid controller_id { get; set; }
		[MaxLength(1000)]
		public virtual string api_description { get; set; }
		[MaxLength(4000)]
		public virtual string api_url { get; set; }
		public virtual Guid? repository_group_id { get; set; }
	}


    /// <summary>
    /// A class which represents the ControllerInfo table.
    /// </summary>
	[Table("Controller_Info")]
	public partial class DB_ControllerInfo
	{
		[Key]
		public virtual Guid controller_id { get; set; }
		[MaxLength(4000)]
		public virtual string controller_url { get; set; }
		[MaxLength(1000)]
		public virtual string controller_description { get; set; }
		public virtual Guid provider_vendorid { get; set; }
		public virtual Guid provider_systemid { get; set; }
		[MaxLength(1000)]
		public virtual string controller_name { get; set; }
		public virtual bool is_active { get; set; }
		public virtual bool is_person { get; set; }
		public virtual bool is_vendor { get; set; }
		public virtual bool is_container_dynamic_separation { get; set; }
		public virtual IEnumerable<DB_ContainerDynamicSeparation> ContainerDynamicSeparation { get; set; }
	}


    /// <summary>
    /// A class which represents the DashboardDataRepositorySetting table.
    /// </summary>
	[Table("Dashboard_Data_Repository_Setting")]
	public partial class DB_DashboardDataRepositorySetting
	{
		[Key]
		public virtual Guid dashboard_data_repository_setting_id { get; set; }
		[MaxLength(100)]
		public virtual string dashboard_data_repository_type { get; set; }
		public virtual bool use_data_setting { get; set; }
		public virtual bool offer_data_setting { get; set; }
		public virtual bool admin_data_setting { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_DashboardDataRepositorySettingSchema> DashboardDataRepositorySettingSchema { get; set; }
	}


    /// <summary>
    /// A class which represents the DashboardDataRepositorySettingSchema table.
    /// </summary>
	[Table("Dashboard_Data_Repository_Setting_Schema")]
	public partial class DB_DashboardDataRepositorySettingSchema
	{
		[Key]
		public virtual Guid dashboard_data_repository_setting_schema_id { get; set; }
		public virtual Guid dashboard_data_repository_setting_id { get; set; }
		[MaxLength(100)]
		public virtual string database_type { get; set; }
		[MaxLength(1000)]
		public virtual string sql { get; set; }
		public virtual bool use_cache { get; set; }
		public virtual long cache_expire_time { get; set; }
		public virtual int order_data { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_DashboardDataRepositorySetting DB_DashboardDataRepositorySetting { get; set; }
	}


    /// <summary>
    /// A class which represents the DashboardSetting table.
    /// </summary>
	[Table("Dashboard_Setting")]
	public partial class DB_DashboardSetting
	{
		[Key]
		public virtual Guid dashboard_setting_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(50)]
		public virtual string display_name { get; set; }
		public virtual int display_order { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_DashboardSettingItem> DashboardSettingItem { get; set; }
	}


    /// <summary>
    /// A class which represents the DashboardSettingItem table.
    /// </summary>
	[Table("Dashboard_Setting_Item")]
	public partial class DB_DashboardSettingItem
	{
		[Key]
		public virtual Guid dashboard_setting_item_id { get; set; }
		public virtual Guid dashboard_setting_id { get; set; }
		public virtual int order_x { get; set; }
		public virtual int order_y { get; set; }
		public virtual int? width { get; set; }
		public virtual int? height { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_DashboardSetting DB_DashboardSetting { get; set; }
		public virtual IEnumerable<DB_DashboardSettingItemView> DashboardSettingItemView { get; set; }
	}


    /// <summary>
    /// A class which represents the DashboardSettingItemView table.
    /// </summary>
	[Table("Dashboard_Setting_Item_View")]
	public partial class DB_DashboardSettingItemView
	{
		[Key]
		public virtual Guid dashboard_setting_item_view_id { get; set; }
		public virtual Guid dashboard_setting_item_id { get; set; }
		[MaxLength(1000)]
		public virtual string view_definition { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_DashboardSettingItem DB_DashboardSettingItem { get; set; }
	}


    /// <summary>
    /// A class which represents the Logging table.
    /// </summary>
	[Table("Logging")]
	public partial class DB_Logging
	{
		[Key]
		public virtual Guid log_id { get; set; }
		public virtual Guid? controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		public virtual DateTime request_date { get; set; }
		public virtual long execute_time { get; set; }
		[MaxLength(3)]
		public virtual string httpstatus_code { get; set; }
		public virtual Guid? vendor_id { get; set; }
		public virtual Guid? system_id { get; set; }
		public virtual Guid? open_id { get; set; }
		public virtual Guid? provider_vendorid { get; set; }
		public virtual Guid? provider_systemid { get; set; }
		[MaxLength(1000)]
		public virtual string client_ipaddress { get; set; }
		[MaxLength(1000)]
		public virtual string controller_name { get; set; }
		[MaxLength(1000)]
		public virtual string action_name { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string querystring { get; set; }
		[MaxLength(1000)]
		public virtual string request_headers { get; set; }
		[MaxLength(1000)]
		public virtual string request_contenttype { get; set; }
		public virtual long request_contentlength { get; set; }
		[MaxLength(1000)]
		public virtual string requestbody { get; set; }
		[MaxLength(1000)]
		public virtual string response_headers { get; set; }
		[MaxLength(1000)]
		public virtual string response_contenttype { get; set; }
		public virtual long response_contentlength { get; set; }
		[MaxLength(1000)]
		public virtual string response_body { get; set; }
		public virtual DateTime request_date_ymd { get; set; }
		public virtual DateTime request_date_ymdh { get; set; }
		public virtual DateTime request_date_ymdhm { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual bool is_internal_call { get; set; }
	}


    /// <summary>
    /// A class which represents the ProViderVendorSystemSummaryYmd table.
    /// </summary>
	[Table("Provider_Vendor_System_Summary_Ymd")]
	public partial class DB_ProViderVendorSystemSummaryYmd
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid provider_vendorid { get; set; }
		public virtual Guid provider_systemid { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the ProViderVendorSystemSummaryYmdH table.
    /// </summary>
	[Table("Provider_Vendor_System_Summary_YmdH")]
	public partial class DB_ProViderVendorSystemSummaryYmdH
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid provider_vendorid { get; set; }
		public virtual Guid provider_systemid { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the ProViderVendorSystemSummaryYmdHm table.
    /// </summary>
	[Table("Provider_Vendor_System_Summary_YmdHm")]
	public partial class DB_ProViderVendorSystemSummaryYmdHm
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid provider_vendorid { get; set; }
		public virtual Guid provider_systemid { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the ContainerSize table.
    /// </summary>
	[Table("Container_Size")]
	public partial class DB_ContainerSize
	{
		[Key]
		public virtual Guid container_size_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual Guid physical_repository_id { get; set; }
		public virtual decimal size_byte { get; set; }
	}


    /// <summary>
    /// A class which represents the System table.
    /// </summary>
	[Table("System")]
	public partial class DB_System
	{
		[Key]
		public virtual Guid system_id { get; set; }
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		[MaxLength(260)]
		public virtual string representative_mail_address { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_Vendor DB_Vendor { get; set; }
	}


    /// <summary>
    /// A class which represents the PersonOccupancyContainerSize table.
    /// </summary>
	[Table("Person_Occupancy_Container_Size")]
	public partial class DB_PersonOccupancyContainerSize
	{
		[Key]
		public virtual Guid person_container_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual Guid open_id { get; set; }
		public virtual decimal size_byte { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationDefinition table.
    /// </summary>
	[Table("Notification_Definition")]
	public partial class DB_NotificationDefinition
	{
		[Key]
		public virtual Guid notification_definition_id { get; set; }
		[MaxLength(3)]
		public virtual string notification_type_code { get; set; }
		[MaxLength(1000)]
		public virtual string controller_id { get; set; }
		[MaxLength(1000)]
		public virtual string vendor_id { get; set; }
		[MaxLength(1000)]
		public virtual string system_id { get; set; }
		[MaxLength(3)]
		public virtual string totalization_type_code { get; set; }
		[MaxLength(3)]
		public virtual string reporting_cycle_code { get; set; }
		public virtual Guid? notification_mail_template_id { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_NotificationType DB_NotificationType { get; set; }
		public virtual DB_TotalizationType DB_TotalizationType { get; set; }
		public virtual DB_ReportingCycle DB_ReportingCycle { get; set; }
		public virtual DB_NotificationMailTemplate DB_NotificationMailTemplate { get; set; }
		public virtual IEnumerable<DB_NotificationEvent> NotificationEvent { get; set; }
		public virtual IEnumerable<DB_NotificationMailHistory> NotificationMailHistory { get; set; }
	}


    /// <summary>
    /// A class which represents the Vendor table.
    /// </summary>
	[Table("Vendor")]
	public partial class DB_Vendor
	{
		[Key]
		public virtual Guid vendor_id { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(260)]
		public virtual string representative_mail_address { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_System> System { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationEvent table.
    /// </summary>
	[Table("Notification_Event")]
	public partial class DB_NotificationEvent
	{
		[Key]
		public virtual Guid notification_event_id { get; set; }
		public virtual Guid notification_definition_id { get; set; }
		[MaxLength(3)]
		public virtual string notification_type_code { get; set; }
		[MaxLength(1000)]
		public virtual string controller_id { get; set; }
		[MaxLength(1000)]
		public virtual string vendor_id { get; set; }
		[MaxLength(1000)]
		public virtual string system_id { get; set; }
		[MaxLength(3)]
		public virtual string totalization_type_code { get; set; }
		[MaxLength(3)]
		public virtual string reporting_cycle_code { get; set; }
		public virtual Guid? notification_mail_template_id { get; set; }
		[MaxLength(20)]
		public virtual string target_date { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_NotificationDefinition DB_NotificationDefinition { get; set; }
		public virtual IEnumerable<DB_NotificationMailHistory> NotificationMailHistory { get; set; }
	}


    /// <summary>
    /// A class which represents the VendorSystemSummaryYmd table.
    /// </summary>
	[Table("Vendor_System_Summary_Ymd")]
	public partial class DB_VendorSystemSummaryYmd
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the VendorSystemSummaryYmdH table.
    /// </summary>
	[Table("Vendor_System_Summary_YmdH")]
	public partial class DB_VendorSystemSummaryYmdH
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int? execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationMailTemplate table.
    /// </summary>
	[Table("Notification_Mail_Template")]
	public partial class DB_NotificationMailTemplate
	{
		[Key]
		public virtual Guid notification_mail_template_id { get; set; }
		[MaxLength(512)]
		public virtual string notification_mail_template_name { get; set; }
		[MaxLength(1000)]
		public virtual string from { get; set; }
		[MaxLength(1000)]
		public virtual string to { get; set; }
		[MaxLength(1000)]
		public virtual string cc { get; set; }
		[MaxLength(1000)]
		public virtual string bcc { get; set; }
		[MaxLength(1000)]
		public virtual string subject { get; set; }
		[MaxLength(1000)]
		public virtual string body { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_NotificationDefinition> NotificationDefinition { get; set; }
		public virtual IEnumerable<DB_NotificationMailHistory> NotificationMailHistory { get; set; }
	}


    /// <summary>
    /// A class which represents the VendorSystemSummaryYmdHm table.
    /// </summary>
	[Table("Vendor_System_Summary_YmdHm")]
	public partial class DB_VendorSystemSummaryYmdHm
	{
		public virtual Guid summaryId { get; set; }
		public virtual Guid vendor_id { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual Guid api_id { get; set; }
		[Key]
		public virtual DateTime request_date { get; set; }
		[MaxLength(1000)]
		public virtual string url { get; set; }
		[MaxLength(1000)]
		public virtual string httpmethodtype { get; set; }
		[MaxLength(100)]
		public virtual string vendor_name { get; set; }
		[MaxLength(100)]
		public virtual string system_name { get; set; }
		public virtual long execute_time { get; set; }
		public virtual int execute_count { get; set; }
		public virtual int successes { get; set; }
		public virtual int failure { get; set; }
		public virtual long request_contentlength { get; set; }
		public virtual long response_contentlength { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime? reg_date { get; set; }
		public virtual int running { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationType table.
    /// </summary>
	[Table("Notification_Type")]
	public partial class DB_NotificationType
	{
		[Key]
		[MaxLength(3)]
		public virtual string notification_type_code { get; set; }
		[MaxLength(100)]
		public virtual string notification_type_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_NotificationDefinition> NotificationDefinition { get; set; }
	}


    /// <summary>
    /// A class which represents the ReportingCycle table.
    /// </summary>
	[Table("Reporting_Cycle")]
	public partial class DB_ReportingCycle
	{
		[Key]
		[MaxLength(3)]
		public virtual string reporting_cycle_code { get; set; }
		[MaxLength(100)]
		public virtual string reporting_type_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_NotificationDefinition> NotificationDefinition { get; set; }
		public virtual IEnumerable<DB_NotificationMailHistory> NotificationMailHistory { get; set; }
	}


    /// <summary>
    /// A class which represents the ResourceOccupancyContainerSize table.
    /// </summary>
	[Table("Resource_Occupancy_Container_Size")]
	public partial class DB_ResourceOccupancyContainerSize
	{
		[Key]
		public virtual Guid resource_container_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual Guid controller_id { get; set; }
		public virtual decimal size_byte { get; set; }
	}


    /// <summary>
    /// A class which represents the SharedContainerSize table.
    /// </summary>
	[Table("Shared_Container_Size")]
	public partial class DB_SharedContainerSize
	{
		[Key]
		public virtual Guid shared_container_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual decimal size_byte { get; set; }
	}


    /// <summary>
    /// A class which represents the SystemOccupancyContainerSize table.
    /// </summary>
	[Table("System_Occupancy_Container_Size")]
	public partial class DB_SystemOccupancyContainerSize
	{
		[Key]
		public virtual Guid system_container_id { get; set; }
		public virtual DateTime investigation_date { get; set; }
		public virtual Guid system_id { get; set; }
		public virtual decimal size_byte { get; set; }
		public virtual Guid vendor_id { get; set; }
	}


    /// <summary>
    /// A class which represents the TotalizationType table.
    /// </summary>
	[Table("Totalization_Type")]
	public partial class DB_TotalizationType
	{
		[Key]
		[MaxLength(3)]
		public virtual string totalization_type_code { get; set; }
		[MaxLength(100)]
		public virtual string totalization_type_name { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		[MaxLength(260)]
		public virtual string upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual IEnumerable<DB_NotificationDefinition> NotificationDefinition { get; set; }
		public virtual IEnumerable<DB_NotificationMailHistory> NotificationMailHistory { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationMailHistory table.
    /// </summary>
	[Table("Notification_Mail_History")]
	public partial class DB_NotificationMailHistory
	{
		[Key]
		public virtual Guid notification_mail_history_id { get; set; }
		[MaxLength(3)]
		public virtual string reporting_cycle_code { get; set; }
		[MaxLength(3)]
		public virtual string totalization_type_code { get; set; }
		public virtual DateTime notification_date { get; set; }
		public virtual Guid notification_definition_id { get; set; }
		public virtual Guid notification_event_id { get; set; }
		public virtual Guid? notification_mail_template_id { get; set; }
		public virtual Guid? controller_id { get; set; }
		public virtual Guid? vendor_id { get; set; }
		public virtual Guid? system_id { get; set; }
		[MaxLength(1000)]
		public virtual string from { get; set; }
		[MaxLength(1000)]
		public virtual string to { get; set; }
		[MaxLength(1000)]
		public virtual string cc { get; set; }
		[MaxLength(1000)]
		public virtual string bcc { get; set; }
		[MaxLength(1000)]
		public virtual string subject { get; set; }
		[MaxLength(1000)]
		public virtual string body { get; set; }
		[MaxLength(1000)]
		public virtual string tempfile_path { get; set; }
		[MaxLength(3)]
		public virtual string mail_type_code { get; set; }
		[Dapper.IgnoreUpdate]
		public virtual DateTime reg_date { get; set; }
		[Dapper.IgnoreUpdate]
		[MaxLength(260)]
		public virtual string reg_username { get; set; }
		public virtual DateTime upd_date { get; set; }
		[MaxLength(260)]
		public virtual string upd_username { get; set; }
		public virtual bool is_active { get; set; }
		public virtual DB_ReportingCycle DB_ReportingCycle { get; set; }
		public virtual DB_TotalizationType DB_TotalizationType { get; set; }
		public virtual DB_NotificationDefinition DB_NotificationDefinition { get; set; }
		public virtual DB_NotificationEvent DB_NotificationEvent { get; set; }
		public virtual DB_NotificationMailTemplate DB_NotificationMailTemplate { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationMailHistoryQueue table.
    /// </summary>
	[Table("Notification_Mail_History_Queue")]
	public partial class DB_NotificationMailHistoryQueue
	{
		[MaxLength(1000)]
		public virtual string payload { get; set; }
		public virtual int dequeue_count { get; set; }
	}


    /// <summary>
    /// A class which represents the NotificationEventQueue table.
    /// </summary>
	[Table("Notification_Event_Queue")]
	public partial class DB_NotificationEventQueue
	{
		[MaxLength(1000)]
		public virtual string payload { get; set; }
		public virtual int dequeue_count { get; set; }
	}

}
