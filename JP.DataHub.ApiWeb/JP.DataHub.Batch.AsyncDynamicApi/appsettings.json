{
  // ロギングの設定
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    },
    "LoggingHttpHeaders": "*"
  },
  "AllowedHosts": "*",
  // プロファイラーの設定
  "Profiler": {
    // プロファイラーを動作させるか？
    "UseProfiler": false,
    // always : 常にヘッダーに付与
    // request : RequestヘッダーにX-Profilerを指定したときだけ
    // それ以外 : 付与しない
    "OutputToHeader": "request",
    // SQLのログを出力するか？
    "OutputSqlLog": true,
    // ???
    "OutputStackLog": true
  },
  // 基盤内で使う設定
  "AppConfig": {
    // 運営会社ベンダーID
    "OperatingVendorVendorId": [ "" ],
    // 以下の２つはベンダー認証のデフォルト値
    "DefaultVendorId": "00000000-0000-0000-0000-000000000001",
    "DefaultSystemId": "00000000-0000-0000-0000-000000000001",
    // ???
    "AllowAsync": "True",
    // ???
    "LoggingHttpHeaders": "*",
    // X-Adminのパスワード値
    "AdminKeyword": "",
    // BlobCacheのコンテナ名
    "BlobCacheContainerName": "cache",
    // X-RequestContinuationを指定した際、topの指定を必須とするか
    "XRequestContinuationNeedsTopCount": "false",
    // GatewayHttpClientのTimiout秒　0を指定した場合は無制限
    "GatewayClientTiemoutSec": "86400",
    // OpenId認証局を固定にする場合、そのアプリケーションIDを指定する。カンマ区切りで複数指定可能。不正(GUID以外)な文字の場合は無視される。デフォルト値(null)はDBから取得する
    "FixedOpenIdAllowedApplication": "XXX-0000-0000-0000-000000000000,",
    // クライアント証明書認証を利用するかどうか
    "UseClientCertificateAuth": "false",
    // DBMSにより上限は異なり(SqlServerは不詳、Oracleは1000)、上げすぎると件数上限・パラメータ数上限への抵触、性能劣化などの可能性あるため注意
    "ODataPatchMaxInClauseItems": "1000",
    // ODataで指定できない管理項目(カンマ区切り)
    "InvalidODataColums": "_Version,_partitionkey,_Type,_System_Id,_Vendor_Id",
    // Referenceのスレッド化有効無効フラグ
    "EnableThreadingOfReference": "true",
    // 以下の２つはベンダー認証で省略が許可されているAPIでベンダーが指定されなかった場合の値
    "VendorSystemAuthenticationDefaultVendorId": "00000000-0000-0000-0000-000000000001",
    "VendorSystemAuthenticationDefaultSystemId": "00000000-0000-0000-0000-000000000001",
    // ヘッダーのキーを大文字・小文字を別にみるか、同一視するか？デフォルト値はfalseで別として扱う（いままで通り）
    "HeaderIgnoreCase": false,
    // SystemFuncの独自認証を行うか。デフォルト値（省略時）はtrueなので行がない場合はtrue（これまで通り）となる
    "EnableOriginalAuthentication": false,
    // 履歴有効化時に添付ファイルの履歴機能を利用するかどうか
    "UseApiAttachFileDocumentHistory": true,
    // DynamicApiが登録を受け付ける最大サイズ
    "MaxRegisterContentLength": 1992294,
    // DynamicApiがBase64Attachfile登録を受け付ける1ドキュメント内のBase64最大サイズ
    "MaxBase64AttachFileContentLength": 8388608,
    // キャッシュ最大サイズ　これを超えた場合はキャッシュされない (Gatewayの場合はレスポンスのサイズ。Gateway以外の場合はMassagePackで圧縮後のサイズが基準となる)
    "MaxSaveApiResponseCacheSize": 1048576,
    // JsonSchemaのValidationで並列で処理するかどうかの閾値
    "ThresholdJsonSchemaValidaitonParallelize": 1000,
    // UpdateActionにおいて厳密なバリデーションを行うか
    //   true : 入力データをリクエストモデル、登録データをリソースモデルでバリデーション(既定)
    //   false: 登録データをリクエストモデルまたはリソースモデルでバリデーション(FW版互換)
    //   ※登録データ = 入力データと既存データをマージした更新結果となるデータ
    "UseStrictValidationOnUpdate": true,
    // 対応言語(セミコロン区切り、先頭がデフォルト)
    "SupportedCultures": [ "ja", "en" ],
    // SQLServerのODataでフィルタ条件値のデコードを行うかどうか 
    // フィルタ条件値に16進数が混入する場合のみ有効にする
    "IsFilterValueUnescapeEnabledOnSqlServerOData": false,
    // InternalServerErrorの場合、詳細なエラーメッセージを出力するか？
    "IsInternalServerErrorDetailResponse": true,
    // ScriptRuntimeLogのDynamicApiのURL
    "ScriptRuntimeLogDynamicApiUrlRegist": "/API/Management/ScriptRuntimeLog/Register",
    // ScriptRuntimeLogのBlobのContainer名
    "ScriptRuntimeLogFileBlobContainerName": "jpdatahubscriptruntimelog",
    // RoslynScriptキャッシュの有効/無効
    "IsRoslynScriptCacheEnable": true,
    // RoslynScriptキャッシュのデフォルト有効期間(秒)
    "RoslynScriptCacheExpirationDefaultSecond": 1800,
    // RoslynScriptキャッシュの最大有効期間(秒)
    "RoslynScriptCacheExpirationMaxSecond": 86400,
    // RoslynScriptキャッシュkeyの最大長さ(Byte)
    "RoslynScriptCacheKeyMaxLength": 1000,
    // RoslynScriptキャッシュvalueの最大サイズ(Byte)
    "RoslynScriptCacheValueMaxSize": 1048576,
    // AOPキャッシュの有効/無効
    "IsAopCacheEnable": true,
    // AOPキャッシュのデフォルト有効期間(秒)
    "AopCacheExpirationDefaultSecond": 1800,
    // AOPキャッシュの最大有効期間(秒)
    "AopCacheExpirationMaxSecond": 86400,
    // AOPキャッシュkeyの最大長さ
    "AopCacheKeyMaxLength": 1000,
    // AOPキャッシュvalueの最大サイズ(Byte)
    "AopCacheValueMaxSize": 1048576,
    // APIに定義されたIPフィルタリングを行うか。デフォルト値（省略時）はtrueで、IPフィルタリングを行う場合はtrue（これまで通り）となる
    "EnableIpFilter": true,
    // 非同期リクエスト登録URL
    "AsycRequestBodyUrl": "/API/Management/AsyncDynamicAPI/Request/Register",
    // 非同期リクエスト登録通知URL
    "AsyncEventHubUrl": "/API/Management/AsyncDynamicAPI/EventHub/RegisterEventHub",
    // 非同期ステータス登録URL
    "AsyncLogUrl": "/API/Management/AsyncDynamicAPI/Status/Register",
    // 非同期ステータス取得URL
    "AsyncApiGetStatusUrl": "/API/Management/AsyncDynamicAPI/Status/Get/{0}",
    // DomainDataSync用のServiceBus送信するか？
    "UseServiceBusForDataSync": true,
    // 添付ファイル取得URL
    "AttachFileDynamicApiUrlGet": "/API/Private/AttachFile/Get",
    // 添付ファイル検索URL
    "AttachFileDynamicApiUrlSearchByMeta": "/API/Private/AttachFile/OData",
    // 添付ファイル登録URL
    "AttachFileDynamicApiUrlRegister": "/API/Private/AttachFile/Register",
    // 添付ファイル削除URL
    "AttachFileDynamicApiUrlDelete": "/API/Private/AttachFile/Delete",
    // OpenId認証の使用を強制するフラグ
    "OpenIdConnectMustBeUsed": false,
    // XmlのNameSpace(適切なドメインを設定する)
    "XmlNamespace": "http://example.com/XMLSchema-instance/"
  },
  // 添付ファイル
  "AttachFile": {
    // AttachFileのTmpパス
    "AttachFileTmpPath": "~/App_Data/Tmp/AttachFile/",
    // CreateAttachFile/UploadAttachFile 時のチェック処理有効化スイッチ
    // UploadAttachFile 時は、コンテントタイプチェックのみ有効
    "IsEnableUploadContentCheck": false,
    // CreateAttachFile/UploadAttachFile 時のコンテントタイプのOKリスト
    // カンマ区切りで指定、ケースインセンシティブで、大文字小文字同じものとして扱います
    // 基本的に完全に一致でチェックします
    // 末尾が * とか ] とか記号終わりは正規表現と見做し、正規表現のチェックになるのと、先頭、文字中の正規表現も、その正規表現が反映されます
    "UploadOK_ContentTypeList": "",
    "UploadOK_ExtensionList": "",
    // 拡張子無しファイルが来た場合どうするか true:アップロードOK(拡張子チェックスキップ) false: ブロック
    // デフォルト値 true ただし、OKリストの指定がある場合のみ有効
    "IsUploadOk_NoExtensionFile": true,
    // メタ情報(FULL)スキーマID
    "AttachFileMetaDataSchemaId": ""
  },
  // 永続化層内で利用するキャッシュの設定
  "RepositoryCache": {
    // Authenticationドメインでのキャッシュの有効時間
    "AuthenticationCacheExpirationTimeSpan": "24:00:00",
    // DynamicApiドメインでのキャッシュの有効時間
    "DynamicApiCacheExpirationTimeSpan": "24:00:00",
    // APIに定義されたWebHookおよびメール送信を行うか。デフォルト値（省略時）はtrueなので行がない場合はtrue（これまで通り）となる
    "EnableWebHookAndMailTemplate": true,
    // QuerySyntaxとODataのエラー時レスポンス修正するAPIのエンドポイントURL（メソッドURLではない）を正規表現（完全一致）で指定する（セミコロン区切りで複数指定）
    "NeedToModifyErrorApiList": "/API/IntegratedTest/ApiQuerySyntax/GetSuppressError/.*"
  },
  // 静的キャッシュ
  "StaticCache": {
    // ここに指定できるのは redis または db のいずれかになる
    // redis : Redisサーバーである。StaticCacheを消去した時間をRedisサーバーに持つ
    // db : RDBMSサーバーである(ドメイン内のDBにConstテーブルがあり、AuthenticationRepository-ClearStaticCacheTime または DynamicApiRepository-ClearStaticCacheTimeがキーの値となる。
    // デフォルト値は db となる
    "ClearStaticCache.TimeServer": "db",
    // ↑の設定を入れたサーバーに、リクエストの度に毎回観に行くのではなく、この時間で指定した間隔（実際はリクエストのタイミング）を開けて見に行くようにする。その時のタイムスパンで単位は秒
    "ClearStaticCache.TimeSpan": "300"
  },
  // 接続文字列
  "ConnectionStrings": {
    "AzureRedisCache": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=1",
    "AzureRedisCacheAccessToken": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=0",
    // LoggingのためのEventHub
    "LoggingEventHub": "",
    // DomainDataSync用のServiceBus
    "DomainDataSyncServiceBus": "",
    // 非同期ストレージ
    "AsyncDynamicApiStorageConnectionStrings": "",
    "AsyncDynamicApiStorageConnectionStringsOci": "{\"NameSpaceName\" : \"nrpypooutwg2\",\"BucketName\" : \"bucket-asyncdynamicapi-dev\",\"RootPath\" : \"async\",\"RetryInterval\" : \"100\",\"RetryCount\" : \"5\",\"ConfigPath\" : \".oci/config_development\",\"ProfileName\" : \"DEFAULT\",\"PemFilePath\" : \".oci/smartfoodchain_api_key_development.pem\",\"HostName\" : \"objectstorage.ap-tokyo-1.oraclecloud.com\"}",
    // ScriptRuntimeLogのBlobの接続文字列
    "ScriptRuntimeLogBlobStorageConnectionStrings": ""
  },
  //OCI API への接続情報
  "OciCredential": {
    "ConfigurationFilePath": ".oci/config",
    "Profile": "DEFAULT",
    "PemFilePath": ".oci/smartfoodchain_api_key.pem"
  },
  //OCI Streaming の情報
  "StreamingService": {
    "DomainDataSync": {
      "Ocid": "",
      "EndPoint": "https://cell-1.streaming.ap-tokyo-1.oci.oraclecloud.com"
    },
    "Logging": {

    }
  },
  // CosmosDBの設定値
  "CosmosDB": {
    // 接続モード
    "CosmosDBConnectionMode": "Direct",
    // 接続タイムアウト秒(デフォルトは5秒)、TCP接続モード時に有効(デフォルトはTCP)
    "OpenTcpConnectionTimeout": 5,
    // 接続ごとのリクエスト数(デフォルトは30)、これを超えたら新しく接続が作られる
    "MaxRequestsPerTcpConnection": 30,
    // ログ出力のしきい値。RUがこの値を越えた場合にログ出力される。
    "MinimumLogRu": 10,
    // 警告のしきい値。RUがこの値を越えるとログレベルが警告となる。
    "AlertRu": 15,
    // クロスパーティションクエリ時の並列実行数（0は並列無し、正の値は並列数指定、-1は並列数をライブラリに任せる）
    "FeedOptionsMaxDegreeOfParallelism": 0,
    // パーティションキー設定ありのAPIでページング処理を行う際にdocumentDBバグ回避処理を行うか
    // trueにするとDISTINCTを省いたSQLを発行する。DISTICTが含まれるとSQL構文としては正しいがDocumentDBライブラリ内でエラーとなってしまう為。
    // DISTICTを省くのでクエリ結果は重複データが発生する。これを許容し、アプリケーション側で重複データを間引く処理を行う等の対処が必要となる。
    "AvoidDocumentDBLibraryBugInPagingWithPartitionKey": false
  },
  // EventHub
  "EventHub": {
    "RetryCount": 3,
    "RetrySpan": "00:01:00"
  },
  // EventHub（Oracle Streaming Service）
  "EventHubStreamingService": {
    // ストリーミングサービスを変更する場合、ストリームに紐づいた"Ocid（streamの文字列を含むOCID）"及び"EndPoint（メッセージ・エンドポイント）"に変更してください。
    "Ocid": "",
    "EndPoint": "https://cell-1.streaming.ap-tokyo-1.oci.oraclecloud.com",
    "RetryCount": 3,
    "RetrySpan": "00:01:00",
    "LoggingEventProcess": {
      "Ocid": "",
      "EndPoint": "https://cell-1.streaming.ap-tokyo-1.oci.oraclecloud.com",
      "RetryCount": 3,
      "RetrySpan": "00:01:00"
    }
  },
  "LoggingEventStreamingService": {
    "Ocid": "",
    "EndPoint": "https://cell-1.streaming.ap-tokyo-1.oci.oraclecloud.com",
    "RetryCount": 3,
    "RetrySpan": "00:01:00"
  },
  // キャッシュの設定
  "cache": {
    // 名前無しDIをしたときに利用する名前
    "default": "DynamicApi",
    // "DynamicApi"のICacheの設定
    "DynamicApi": {
      // モードの指定。使えるのはinmemory,redis,nocache　　※inmemory,redis以外は無視される
      "mode": "redis",
      // キャッシュの有効時間
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=12000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=1"
      }
    },
    // "Authority"のICacheの設定
    "Authority": {
      "mode": "redis",
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=2"
      }
    },
    "DynamicApiBlobCache": {
      "mode": "blob",
      "Expiration": "01:00:00",
      "options": {
        "ConnectionStrings": "hogehoge",
        "BlobCacheContainerName": "cache"
      }
    },
    // ベンダー認証用のデータを保持するためのキャッシュ
    // ※ベンダー認証のトークンはキャッシュに持っている
    "AccessToken": {
      "mode": "redis",
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=0"
      }
    },
    "CsvDownloadCache": {
      "mode": "redis",
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=4"
      }
    },
    // Roslyn
    "RoslynCache": {
      "mode": "redis",
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=5"
      }
    },
    // AOP
    "AopCache": {
      "mode": "redis",
      "Expiration": "01:00:00",
      "Options": {
        "ConnectionStrings": "synctimeout=6000,localhost:6379,password=,ssl=False,abortConnect=False,DefaultDatabase=5"
      }
    }
  },
  // ADO.NETのプロバイダーの設定値
  "DbProviderFactories": [
    {
      "Invariant": "System.Data.SqlClient",
      "DbType": "SqlServer",
      "Type": "System.Data.SqlClient.SqlClientFactory, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089",
      "Init": {
        // フェッチサイズの指定はOracleのみが使える
        "FetchSize": "123"
      }
    },
    {
      "Invariant": "Oracle.ManagedDataAccess.Client",
      "DbType": "Oracle",
      "Type": "Oracle.ManagedDataAccess.Client.OracleClientFactory, Oracle.ManagedDataAccess, Version=3.1.21.1, Culture=neutral, PublicKeyToken=89b483f429c47342",
      "Init": {
        // フェッチサイズの指定はOracleのみが使える
        "FetchSize": "123"
      }
    }
  ],
  // Dapperの設定
  "Dapper": {
    // データベースのタイプを指定。現在対応しているのはOracleとSQLServer
    "DbType": "Oracle"
  },
  // API FILTER（基盤内ではAOPと言っている）の設定
  "ApiFilter": [
    {
      // 【基本的な説明】
      // Levelは優先順位。1が一番優先度が高い。
      // ResourceUrl,ApiUrl,HttpMethod,Action,VendorId,SystemId,RequestVendorId,RequestSystemIdはそれが合致したもの（API呼び出しと）が使われる。
      // ResourceUrl,ApiUrl,HttpMethod,Action,VendorId,SystemId,RequestVendorId,RequestSystemIdに「*」を指定した場合は、ワイルドカード的にイメージしてもらってよい（全部ヒットする）
      // API検索の際は、ResourceUrl,ApiUrl,HttpMethod,Action,VendorId,SystemIdは正規表現で検索が行える
      // ParamにはAOPのクラスに渡すためのパラーメータをセットできる。型はstringだが、サイズ制限がないのでjsonとかで複雑な情報を渡すことも可能である
      // ODataOverPartitionを利用する際の注意 対象APIはGatewayでないとODataQueryを渡せずNotImplになる
      // 【AOPの入れ子(複数指定について)】
      // LevelとApiのhook条件(ResourceUrl,ApiUrl,HttpMethod,Action,VendorId,SystemId)が同一の設定を複数入れることで
      // 指定のAPIに対して複数のAOPFilterを実行することができる
      // 実行順はSeqを指定する (指定しない場合実行順は不定となる 多くの場合は記載順)
      "Level": "11",
      "ResourceUrl": "/API/Private/SmartAgri/Fapsdb/BasicInfo",
      "ApiUrl": "ODataOverPartitionForAdmin",
      "HttpMethod": "*",
      "Action": "*",
      "Assembly": "App_Data\\JP.DataHub.ODataOverPartition.dll",
      "Type": "JP.DataHub.ODataOverPartition.ODataOverPartitionFilter"
    },
    {
      "Level": "1",
      "ResourceUrl": "*",
      "ApiUrl": "*",
      "HttpMethod": "*",
      "Action": "*",
      "Assembly": "App_Data\\JP.DataHub.ApiFilterSample.dll",
      "Type": "JP.DataHub.ApiFilterSample.ApiFilter"
    }
  ],
  // OpenID認証の設定値
  "OpenId": {
    "AadEndpoint": "",
    "TenantId": "",
    "Tenant": "",
    "SignUpInPolicyId": "",
    "WebApiClientId": ""
  },
  // Azure AD B2C Graph Api用
  "ida": {
    "GraphApiAppClientId": "",
    "GraphApiAppClientSecret": "",
    "GraphApiVersion": "api-version=1.6",
    "GraphApiEndpoint": "https://graph.windows.net/{0}/{1}?{2}"
  },
  // KeyVaultの設定値
  "KeyVault": {
    "Uri": "",
    "TenantId": "",
    "ClientId": "",
    "ClientSecret": ""
  },
  // ベンダー認証の設定値
  "VendorAuthenticationJwtKey": {
    // 利用者
    "Audience": "https://localhost",
    // 発行者
    "Issuer": "https://localhost",
    // 署名用暗号化キー
    "AudienceSecret": ""
  },
  // RFC7807形式の特定のものが発生した時に、別のものに置き換える仕組み
  "Rfc7807ErrorMap": {
    // 以下の例はE99999(これはInternalServerError)のときは、E02407に置き換えられる
    // "E99999.To": "E02407"
  },
  // SQL Server用DataStoreRepositoryの設定
  "SqlServerDataStoreRepository": {
    // SqlServerへの操作リトライ回数：デフォルト5回
    "RetryCount": 2,
    // SqlServerへの操作リトライ秒数(type:double)：デフォルト2秒。指数関数的バックオフで秒を指定しているので秒数=待ち時間ではない
    "RetryPowerBaseSecond": 1.1
  },
  // DynamicAPIの呼び出しで、Responseに次のヘッダーをセットする
  "HttpResponseHeader": [
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "X-Content-Type-Options",
      "Value": "nosniff"
    },
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "Strict-Transport-Security",
      "Value": "max-age=15678000"
    },
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "Cache-Control",
      "Value": "no-store"
    },
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "Referrer-Policy",
      "Value": "no-referrer"
    },
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "Permissions-Policy",
      "Value": "fullscreen=(), geolocation=()"
    },
    {
      "HttpMethod": "*",
      "HttpStatusCode": "*",
      "Name": "Content-Security-Policy",
      "Value": "default-src 'self'"
    }
  ],
  // Admin属性のパスワード管理
  "Password": {
    "default": "",
    "HalexNotifyPassword": "",
    "test": ""
  },
  "AsyncDynamicApiSetting": {
    "InternalServerErrorDetailResponse": "true",
    "VendorId": "",
    "SystemId": "",
    "OpenId": "",
    "ClientIpAddress": "",
    "GetRequestDataUrl": "/API/Management/AsyncDynamicAPI/Request/Get/{0}",
    "GetStatusDataUrl": "/API/Management/AsyncDynamicAPI/Status/Get/{0}",
    "RegistStatusDataUrl": "/API/Management/AsyncDynamicAPI/Status/Register",
    "DeleteRequestDataUrl": "/API/Management/AsyncDynamicAPI/Request/Delete/{0}",
    "TcpKeepAliveEnable": "true",
    "TcpKeepAliveKeepAliveTime": "230000",
    "TcpKeepAliveKeepAliveInterval": "230000",
    "MaxNumberOfAttempts": "5",
    "RetryDelaySec": 60,
    "EventHubMaxBatchSize": "10",
    "EventHubName": "asyncdynamicapi",
    "AsyncResultPath": "asyncdynamicapiresult/",
    "ContentTypeString": "application/xml,text/xml,text/csv,application/json,application/geo+json,application/vnd.geo+json"
  }
}